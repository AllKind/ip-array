<?xml version="1.0" encoding="UTF-8"?>
<?oxygen RNGSchema="http://www.oasis-open.org/docbook/xml/5.0/rng/docbookxi.rng" type="xml"?>
<book xmlns="http://docbook.org/ns/docbook" xmlns:xi="http://www.w3.org/2001/XInclude"
  xmlns:xlink="http://www.w3.org/1999/xlink" version="5.0">
  <info version="1.0"><title>IP-Array 1.0 Reference Manual</title><author>
      <personname><firstname>AllKind</firstname><surname/></personname>
      <affiliation>
        <orgname>AllKind</orgname>
      </affiliation></author>
    <pubdate>2014</pubdate>
    <legalnotice>
      <para>GPL v.2+</para>
    </legalnotice>
    <copyright>
      <year>2014 AllKind</year>
    </copyright>
  </info>
  <chapter xml:id="intro">
    <title>Introduction</title>
    <section xml:id="about_doc">
      <title>About this document</title>
      <para>This document is the <emphasis role="bold">reference manual</emphasis> for <emphasis
          role="bold">IP-Array version 1.0</emphasis>.</para>
      <para>It should provide all the information necessary to configure and use IP-Array.</para>
    </section>
    <section xml:id="about_ip-array">
      <title>About IP-Array</title>
      <para>This section gives an overview about what IP-Array is, the requirements, features, goals
        and online availability.</para>
      <section xml:id="whatis_ip-array">
        <title>What is IP-Array?</title>
        <para>IP-Array is a command-line program (you may also say `script') written for <emphasis
            role="bold">bash</emphasis> (the bash shell <link
            xlink:href="http://www.gnu.org/software/bash">www.gnu.org/software/bash</link>).</para>
        <para>It's purpose is to configure <emphasis role="bold">IPv4</emphasis>
          <emphasis role="bold">firewalling</emphasis> and <emphasis role="bold">traffic
            shaping</emphasis> of a linux host.</para>
        <para>To achieve this, IP-Array <emphasis role="bold">configures</emphasis> the linux
          kernels <emphasis role="bold">netfilter / traffic control</emphasis> subsystems via the
          userspace tools<emphasis role="bold"> iptables / ipset / tc</emphasis>.</para>
        <para>It also allows to <emphasis role="bold">load and / or unload</emphasis> netfilter
          related <emphasis role="bold">kernel</emphasis>
          <emphasis role="bold">modules</emphasis> and <emphasis role="bold">configure</emphasis>
          the kernel via the <emphasis role="bold">`/proc' filesystem</emphasis>.</para>
        <para><emphasis role="bold">Intended Audience:</emphasis> Advanced End Users, System
          Administrators.</para>
        <para><emphasis role="bold">Field of application:</emphasis> From a single host system to a
          multi-homed router or gateway.</para>
      </section>
      <section xml:id="requirements">
        <title>Requirements</title>
        <para>This list describes, what is necessary to use IP-Array:</para>
        <para>
          <itemizedlist>
            <listitem>
              <para>Bash version 3.0 or higher.</para>
            </listitem>
            <listitem>
              <para>Linux kernel 2.4 or higher.</para>
            </listitem>
            <listitem>
              <para>Netfilter support enabled in the kernel.</para>
            </listitem>
            <listitem>
              <para>Traffic control support enabled in the kernel (optional).</para>
              <para>To enable traffic shaping.</para>
            </listitem>
            <listitem>
              <para>Some coreutils: cat, date, grep, mkdir, rm, sort, uname.</para>
            </listitem>
            <listitem>
              <para>The <command>iptables</command> program.</para>
            </listitem>
            <listitem>
              <para>The <command>ipset</command> program (optional) . Version 4.x to 6.22 are
                supported.</para>
            </listitem>
            <listitem>
              <para>The <command>iproute2</command> program (ip).</para>
            </listitem>
            <listitem>
              <para>The <command>lsmod</command> and <command>modprobe</command> programs.</para>
              <para>Required if IP-Array is configured to load and/or unload modules.</para>
            </listitem>
            <listitem>
              <para>The <command>tc</command> program (optional).</para>
              <para>To enable traffic shaping.</para>
            </listitem>
            <listitem>
              <para>The <command>logger</command> utility (optional).</para>
              <para>To write messages to syslog.</para>
            </listitem>
            <listitem>
              <para>The <command>at</command> utility.</para>
            </listitem>
            <listitem>
              <para>The <command>bc</command> (bash calculator) utility.</para>
            </listitem>
            <listitem>
              <para>Decent understanding of the netfilter concept. Tables, chains (and their order
                of traversal). State match (conntrack) functionality.</para>
            </listitem>
            <listitem>
              <para>Decent understanding of the traffic control concept (optional). Qdiscs (htb,
                sfq), classes, filters and how they work together.</para>
            </listitem>
            <listitem>
              <para>Decent understanding of the `/proc' filesystems networking (netfilter) options
                (optional)</para>
            </listitem>
          </itemizedlist>
        </para>
      </section>
      <section xml:id="goals">
        <title>Goals</title>
        <orderedlist>
          <listitem>
            <para>Provide a configuration interface to iptables, ipset and tc.</para>
          </listitem>
          <listitem>
            <para>Allowing flexible configuration from simple to complex setups.</para>
          </listitem>
          <listitem>
            <para>Keep effective rule writing effort low, by just entering the desired values, or
              allow grouping of options.</para>
          </listitem>
          <listitem>
            <para>Stay as close as possible with the concept and naming of iptables / tc.</para>
          </listitem>
          <listitem>
            <para>Although (by now) it's not the main goal of IP-Array, provide some preset options
              for automatic configuration.</para>
          </listitem>
        </orderedlist>
      </section>
      <section xml:id="features">
        <title>Features</title>
        <orderedlist>
          <listitem>
            <para>Avaliable iptables targets:<itemizedlist>
                <listitem>
                  <para>Supported in this version:</para>
                  <para>AUDIT, CHECKSUM, CLASSIFY, CLUSTERIP, CONNMARK, CONNSECMARK, CT, DNAT, DSCP,
                    ECN, HMARK, IDLETIMER, LED, LOG, MARK, MASQUERADE, NETMAP, NFLOG, NFQUEUE,
                    QUEUE, RATEEST, RAWDNAT, RAWSNAT, REDIRECT, REJECT, SECMARK, SET, SNAT, TCPMSS,
                    TCPOPTSTRIP, TEE, TOS, TPROXY, TTL, ULOG</para>
                </listitem>
                <listitem>
                  <para>The list of available targets can be retrieved by executing
                      <command>ip-array show -sc targets</command>.</para>
                </listitem>
                <listitem>
                  <para>IP-Array supports <emphasis role="bold">any target</emphasis> that has
                      <emphasis role="bold">no options</emphasis>.</para>
                </listitem>
                <listitem>
                  <para><emphasis role="bold">No Target</emphasis>. It is possible to create rules
                    without a target set, by specifying the target with the special string:
                      `<emphasis role="bold">empty</emphasis>'.</para>
                </listitem>
              </itemizedlist></para>
          </listitem>
          <listitem>
            <para>Avaliable iptables match extensions:<itemizedlist>
                <listitem>
                  <para>Supported in this version:</para>
                  <para>addrtype, ah, bpf, cluster, comment, connbytes, connlimit, connmark,
                    conntrack, cpu, dccp, devgroup, dscp, ecn, esp, hashlimit, helper, iprange,
                    ipvs, length, limit, mac, mark, multiport, nfacct, osf, owner, physdev, pkttype,
                    policy, quota, rateest, realm, recent, rpfilter, sctp, set, socket, state,
                    statistic, string, tcpmss, time, tos, ttl, u32</para>
                </listitem>
                <listitem>
                  <para>The list of available options can be retrieved by executing
                      <command>ip-array show -sc matches</command>.</para>
                </listitem>
              </itemizedlist></para>
          </listitem>
          <listitem>
            <para>Supported tables: filter, mangle, nat, raw, rawpost (xtables-addons),
              security.</para>
          </listitem>
          <listitem>
            <para>Template based rule structure definition (quite a huge list of predifined
              templates is provided out of the box) to build rulesblocks (stacks of rules, which
              just contain values).</para>
          </listitem>
          <listitem>
            <para>Definition of templates, ruleblocks and rules is done in a simple XML
              dialect.</para>
          </listitem>
          <listitem>
            <para>Options in rules can be grouped to save writing effort.</para>
          </listitem>
          <listitem>
            <para>ipset integration. Older ipset versions (4.x, 5.x) are supported. Compatible with
              ipset v. 6 to 6.22.</para>
          </listitem>
          <listitem>
            <para>Chain creation (by adding them in the <varname>CHAIN_MAP</varname>
              variable).</para>
          </listitem>
          <listitem>
            <para>Differnent modi of automatic `jump tree' creation in all tables.</para>
          </listitem>
          <listitem>
            <para>Allow admin connection.</para>
          </listitem>
          <listitem>
            <para>Create stateful return traffic rules (ESTABLISHED, RELATED).</para>
          </listitem>
          <listitem>
            <para>Create final (terminating) rules. A chain termination option for builtin and
              IP-Array created chains, which allows to choose between different 'final rule'
              modes.</para>
          </listitem>
          <listitem>
            <para>Automatic configuration (rule generation) options for:<itemizedlist>
                <listitem>
                  <para>Policy</para>
                  <para>Set the chains policy.</para>
                </listitem>
                <listitem>
                  <para>IPSEC (VPN)</para>
                  <para>Put all ipsec related traffic into the ipsec chain. Allow only packets from
                    / to the configured VPN branches.</para>
                  <para>An option is available to allow all traffic between the VPN branches.</para>
                </listitem>
                <listitem>
                  <para>DNS<orderedlist>
                      <listitem>
                        <para>Allow local host DNS lookups to specific name servers.</para>
                      </listitem>
                      <listitem>
                        <para>Allow forwarded DNS lookups from specific LAN name servers to ISP name
                          servers.</para>
                      </listitem>
                      <listitem>
                        <para>Allow forwarded DNS lookups from specific LAN name servers to root
                          name servers.</para>
                      </listitem>
                    </orderedlist></para>
                </listitem>
                <listitem>
                  <para>SMTP</para>
                  <para>Allow SMTP traffic from specific LAN(s) to ISP mail servers.</para>
                </listitem>
                <listitem>
                  <para>NTP</para>
                  <para>Allow time server queries from local host to specific NTP servers.</para>
                </listitem>
                <listitem>
                  <para>FTP</para>
                  <para>Allow forwarded (optional active/passive) FTP traffic from specific
                    LAN(s).</para>
                </listitem>
                <listitem>
                  <para>OUTPUT rule generation (bound to interfaces or primary IP addresses).</para>
                </listitem>
                <listitem>
                  <para>Anti spoofing.</para>
                </listitem>
              </itemizedlist></para>
          </listitem>
          <listitem>
            <para>Automated iptables logging options:<itemizedlist>
                <listitem>
                  <para>Globally log fragments</para>
                </listitem>
                <listitem>
                  <para>Globally log invalid TCP packets</para>
                </listitem>
                <listitem>
                  <para>Globally log packets in INVALID state</para>
                </listitem>
                <listitem>
                  <para>Globally log port scans</para>
                </listitem>
                <listitem>
                  <para>Log options (prefix, level, etc.) for the above listed.</para>
                </listitem>
              </itemizedlist></para>
          </listitem>
          <listitem>
            <para>Automated iptables dropping options:<itemizedlist>
                <listitem>
                  <para>Globally drop fragments</para>
                </listitem>
                <listitem>
                  <para>Globally drop invalid TCP packets</para>
                </listitem>
                <listitem>
                  <para>Globally drop packets in INVALID state</para>
                </listitem>
                <listitem>
                  <para>Globally drop port scans</para>
                </listitem>
                <listitem>
                  <para>Reject AUTH (tcp port 113) on certain interfaces</para>
                </listitem>
                <listitem>
                  <para>Drop NETBIOS broadcasts on certain interfaces</para>
                </listitem>
                <listitem>
                  <para>Drop DHCP broadcasts on certain interfaces</para>
                </listitem>
                <listitem>
                  <para>Drop UPNP broadcasts on certain interfaces</para>
                </listitem>
              </itemizedlist></para>
          </listitem>
          <listitem>
            <para>Traffic shaping capabilities:<itemizedlist>
                <listitem>
                  <para>Marking of packets in mangle table</para>
                </listitem>
                <listitem>
                  <para>Creation of htb and sfq qdiscs</para>
                </listitem>
                <listitem>
                  <para>Creation of tc classes and filters</para>
                </listitem>
                <listitem>
                  <para>Bulk OUTPUT and FORWARD qdiscs</para>
                </listitem>
                <listitem>
                  <para>Prioryzing of SYN packets</para>
                </listitem>
              </itemizedlist></para>
          </listitem>
          <listitem>
            <para>Prolog and Epilog scripts</para>
            <para>Prolog and epilog scripts can be configured selectively for any startup
              mode.</para>
          </listitem>
          <listitem>
            <para>Loading and unloading of kernel modules (with optional parameters)</para>
          </listitem>
          <listitem>
            <para>/proc filesystem configuration</para>
            <para>There are many networking related options available in IP-Array, to configure the
              system using the /proc filesystem.</para>
          </listitem>
          <listitem>
            <para>Saving restore rulesets / commands / system state</para>
            <para>There are various ways available to save the generated rulesets and or commands
              selectivly (iptables, ipset, tc, modprobe, /proc) or all at once. The saved files may
              be used to restore the configured system state.</para>
          </listitem>
          <listitem>
            <para>Different levels of IP-Array's output verbosity to the screen and or syslog can be
              set</para>
          </listitem>
          <listitem>
            <para>Screen output can be colourized</para>
            <para>Colours for different message categories can be defined by the user.</para>
          </listitem>
          <listitem>
            <para>Public functions</para>
            <para>IP-Array allows the usage of `public functions' in rule files. They may be used to
              log messages (giving the opportunity to totally customize IP-Array's log output) or
              call automatic rule creation functions.</para>
          </listitem>
          <listitem>
            <para>Different startup behaviour according to command line parameter. Including
              multiple options to save and / or restore generated rulesets or commands.</para>
          </listitem>
          <listitem>
            <para>A `test' mode to test new configurations.</para>
          </listitem>
          <listitem>
            <para>Automatic restoring of the previous ruleset on error when applying the new
              configuration.</para>
          </listitem>
        </orderedlist>
      </section>
      <section xml:id="download_info">
        <title>Where to find IP-Array?</title>
        <subtitle>Home page and download information</subtitle>
        <para>IP-Array is currently hosted at <link xlink:href="http://sf.net"
          >sourceforge</link>.</para>
        <para>The home page is reachable via: <link xlink:href="http://www.sf.net/projects/ip-array"
            >http://www.sf.net/projects/ip-array</link> or <link
            xlink:href="http://ip-array.sf.net/">http://ip-array.sf.net/</link>.</para>
        <para>IP-Array files are available for download at: <link
            xlink:href="http://sourceforge.net/project/showfiles.php?group_id=146101"
          >sf.net</link>.</para>
        <para>There is a mirror on github: <link xlink:href="https://github.com/AllKind/ip-array"
            >https://github.com/AllKind/ip-array</link>.</para>
      </section>
    </section>
  </chapter>
  <chapter xml:id="gen_info">
    <title>General Information</title>
    <para>This Chapter provides information about the structure, functionality and program logic of
      IP-Array.</para>
    <section xml:id="name_conv">
      <title>Naming conventions</title>
      <itemizedlist>
        <listitem xml:id="name_def_rule">
          <para>rule</para>
          <para>A rule is either:</para>
          <orderedlist>
            <listitem>
              <para>An entity in an iptables or tc <link linkend="name_def_ruleblock"
                  >ruleblock</link>. Defined by the user or program logic. Which will be read by
                IP-Array, in order to create one or more iptables or tc commands.</para>
            </listitem>
            <listitem>
              <para>An entity added by the `add_rule' function. Where the `add_rule' function may be
                used as `public function' or `inline function'. In order to create an iptables
                command.</para>
            </listitem>
            <listitem>
              <para>An entity in a XML rule or combined rule.</para>
            </listitem>
          </orderedlist>
        </listitem>
        <listitem xml:id="name_def_ruleblock">
          <para>ruleblock</para>
          <para>A ruleblock is a group (stack) of <link linkend="name_def_rule">rules</link>, to be
            read in order of occurence.</para>
          <para>The structure of the ruleblock is defined in a <link linkend="name_def_template"
              >template</link>.</para>
        </listitem>
        <listitem xml:id="name_def_template">
          <para>template</para>
          <para>A template describes the structure of a <link linkend="name_def_ruleblock"
              >ruleblock</link>.</para>
          <para>Each <link linkend="name_def_rule">rule</link> entry in a ruleblock is interpreted
            column-wise. How the values in each column are interpreted, is defined in the template
            called with the ruleblock.</para>
          <para>The following example will show how a rule in a ruleblock , structured according to
            the definitions in a template, may look:</para>
          <table>
            <title>Example of Template and Ruleblock relationship</title>
            <tgroup cols="5" align="left">
              <tbody>
                <row>
                  <entry><emphasis role="bold">Template definition:</emphasis></entry>
                  <entry>jump_target</entry>
                  <entry>ipt_chain</entry>
                  <entry>input_device</entry>
                  <entry>source_address</entry>
                </row>
                <row>
                  <entry><emphasis role="bold">According ruleblock rule:</emphasis></entry>
                  <entry>DROP</entry>
                  <entry>INPUT</entry>
                  <entry>eth0</entry>
                  <entry>10.0.0.10</entry>
                </row>
              </tbody>
            </tgroup>
          </table>
        </listitem>
      </itemizedlist>
    </section>
    <section xml:id="prog_logic">
      <title>Program logic</title>
      <para/>
      <section xml:id="start_behav">
        <title>Starting behaviour</title>
        <para>If IP-Array is run with the `<emphasis role="bold">start</emphasis>' parameter, a
          lockdown mode is enforced until configuration is read and all iptables rules have been
          generated. During this lockdown mode only localhost and the administrator connection are
          allowed. After all rules are collected, they are applied at once. If the config variable
          RESTORE_ON_START is set to `1' and previously saved rulesets are available, those will be
          sourced and thus activated immediatly.</para>
        <para>In any other mode, that actually runs commands to configure the system, IP-Array will
          not touch the currently active iptables, tc rules or /proc configuration until all rules
          and / or commands have been generated.</para>
        <para>After all rules / commands are collected, they are applied at once. This should keep
          the time, the system is in an unconfigured or partly configured state, to a minimum.
          Allowing to catch configuration errors, before changing the systems state.</para>
        <para>The behaviour for kernel modules is different. Module probing (if configured at all)
          is done every time IP-Array loads. To avoid reloading modules on an already running
          system, modules will only be loaded if they are not loaded already. If running in a mode
          that does not apply commands like i.e. `dry-run', then module probing is not actually
          perfomed, but done with `modprobe -n'.</para>
      </section>
      <section xml:id="error_handling">
        <title>Error handling</title>
        <para>In the main configuration file a variable named <varname>EXIT_ON_ERROR</varname>
          exists to control IP-Arrays behaviour on errors. If it set to `1', the program will exit
          on any configuration and command apply error it can detect. In case the system state has
          already been changed by, either loading / unloading modules, or setting values in the
          /proc filesystem, IP-Array will try to revert those changes. If iptables commands have
          already been applied, a lockdown mode will be enforced. All policies will be set to DROP
          and all chains get emptied. Depending on the configuration, only the current
          administrative connection (if present taken from the bash environment variable
            <varname>SSH_CONNECTION</varname>, or if not, if configured from the configuration
          variable <varname>ADMIN_CONNECTION</varname>) and localhost traffic (configuration
          variable <varname>ALLOW_LOOPBACK</varname>) may be allowed. If
            <varname>EXIT_ON_ERROR</varname> is set to `0', IP-Array only sends error messages and
          keeps on going.</para>
        <section xml:id="autosave">
          <title>Autosave / restore</title>
          <para>If IP-Array is started with one of the following parameters: open, restart, or
            tc-start it will automatically save the current iptables ruleset using iptables-save to
            a temporary file. In case an error occurs while processing the configuration, this
            ruleset will be restored. This behaviour can be turned off, by using the startup option
              <emphasis role="bold">-na | --no-autosave</emphasis>. If the configuration variable
              <varname>IPTSAVE_FAILS</varname> is set to `1' automatic saving / restoring will also
            not take place.</para>
          <para>
            <important>
              <para>The restore procedure may even occur after an error condition lockdown (as
                described above) was inforced. This is done as something could go wrong with the
                restore process. Better have a lockded down system than one with an unkown and most
                likely messed up state.</para>
            </important>
          </para>
        </section>
        <section xml:id="exit_codes">
          <title>Exit codes</title>
          <para>
            <itemizedlist>
              <listitem>
                <para>0 - Success.</para>
              </listitem>
              <listitem>
                <para>1 - Unknown error.</para>
              </listitem>
              <listitem>
                <para>2 - Usage information (help).</para>
              </listitem>
              <listitem>
                <para>111 - Not exist error. Used if i.e. a file was not found.</para>
              </listitem>
              <listitem>
                <para>112 - Not defined error. Used if i.e. a configuration variable is not
                  set.</para>
              </listitem>
              <listitem>
                <para>113 - Loading error. Used if i.e. sourcing a file failed.</para>
              </listitem>
              <listitem>
                <para>114 - Failure error. General fail condition.</para>
              </listitem>
              <listitem>
                <para>115 - Configuration error. Used if a configuration error was not found.</para>
              </listitem>
            </itemizedlist>
          </para>
        </section>
      </section>
      <section xml:id="config_validation">
        <title>Configuration validation</title>
        <para>Every configuration variable, as well as every rule set by the user, will be validated
          for sane entries. For example IP addresses, port and protocol specifications, etc. are
          checked for valid values. If a bad value is detected, according messages will be displayed
          and the rule entry will be ignored. IP-Array may also quit further processing, if it is
          configured to exit on errors.</para>
      </section>
      <section xml:id="configfile_parsing">
        <title>XML configuration file parsing</title>
        <para xlink:href="">As IP-Array starts, it looks if it can find previously already compiled
          bash scripts for templates, rules and ruleblocks. If those are found, they will be read
          and no XML file parsing will be done. Otherwise the XML configuration files will be
          interpreted and the according bash scripts will be compiled. There are <link
            linkend="startup_params">startup parameters</link> available to force XML parsing
          globaly, or selectively for templates, rules and ruleblocks.</para>
      </section>
      <section xml:id="iface_chains">
        <title>Per interface jump tree creation</title>
        <para/>
        <section>
          <title>Forwarding interface classified chains</title>
          <para>IP-Array creates chains between every network interface configured in
            'NET_INTERFACES'. Means if you define two interfaces i.e: eth0 and eth1, IP-Array will
            create two chains named: 'eth0_to_eth1' and 'eth1_to_eth0'. And so on for every
            additional interface. This can done for the filter, mangle, nat and the raw table
            according to the configuration. In example for the filter table the FORWARD chain then
            is filled with jump entries, seeding out the cross-interface traffic to the appropriate
            chain. Means every packet entering the FORWARD chain will end up in one of those chains
            created by IP-Array. This should minimize the amount of rules to pass before reaching
            the matching rule. IP-Array always uses those cross-interface chains when it applies
            rules in the FORWARD chain. In case an interface wildcard i.e: 'eth+', or an inverted
            interface value i.e: '!eth0' is used, the target chain will be FORWARD, instead of the
            cross-interface chains.</para>
        </section>
        <section>
          <title>Non-forwarding interface classified chains</title>
          <para>Just like with the cross-interface chains, INPUT and OUTPUT packets are also
            classified by interface. For each network interface configured, INPUT and OUTPUT chains
            will be created. For example if one interface named 'eth0' is present, the chains
            'INPUT_eth0', 'OUTPUT_eth0' and the according jump entries will be created and
            automatically.</para>
        </section>
      </section>
      <section xml:id="network_chains">
        <title>Per network jump tree creation</title>
        <para/>
      </section>
      <section>
        <title xml:id="iface_and_network_chains">Combined network and interface jump tree
          creation</title>
        <para/>
      </section>
      <section xml:id="routing">
        <title>Routing</title>
        <para>IP-Array does <emphasis role="bold">not</emphasis> touch your routing tables at
          all!</para>
      </section>
    </section>
    <section xml:id="dir_struct">
      <title>Directory structure</title>
      <para>This is the description of the dicretory structure IP-Array uses:</para>
      <variablelist>
        <varlistentry>
          <term>BASE_DIR</term>
          <listitem>
            <para>Base directory for IP-Array.</para>
            <para>Default location of defaults directory, saving directory, help directory.</para>
            <para>`stable' and `test' (OP_DIR) directory (describing runmode).</para>
            <para>i.e. <filename>`/usr/local/etc/ip-array/'</filename></para>
          </listitem>
        </varlistentry>
        <varlistentry>
          <term>BIN_DIR</term>
          <listitem>
            <para>Directory to put the main IP-Array executable into.</para>
            <para>i.e. <filename>`/usr/local/bin/ip-array/'</filename></para>
          </listitem>
        </varlistentry>
        <varlistentry>
          <term>LIB_DIR</term>
          <listitem>
            <para>Directory to put the IP-Array function files into.</para>
            <para>i.e. <filename>`/usr/local/lib/ip-array/'</filename></para>
          </listitem>
        </varlistentry>
        <varlistentry>
          <term>HELP_DIR</term>
          <listitem>
            <para>Directory containing help files.</para>
            <para><code>HELP_DIR="${BASE_DIR}/help.d"</code></para>
          </listitem>
        </varlistentry>
        <varlistentry>
          <term>OP_DIR</term>
          <listitem>
            <para>Operation directory according to runmode. Can be either `stable' or `test' (if
              startup parameter `test' is used).</para>
            <para><code>OP_DIR="${BASE_DIR}/${rmode}"</code></para>
          </listitem>
        </varlistentry>
        <varlistentry>
          <term>CONFIG_DIR</term>
          <listitem>
            <para>Directory containing configuration files and sub-directories.</para>
            <para><code>CONFIG_DIR="${OP_DIR}/conf.d"</code></para>
          </listitem>
        </varlistentry>
        <varlistentry>
          <term>RULE_DIR</term>
          <listitem>
            <para>Directory to put the rule files into.</para>
            <para><code>RULE_DIR="${OP_DIR}/rules.d"</code></para>
          </listitem>
        </varlistentry>
        <varlistentry>
          <term>SCRIPT_DIR</term>
          <listitem>
            <para>Directory for the prolog / epilog scripts.</para>
            <para><code>SCRIPT_DIR="${OP_DIR}/scripts.d"</code></para>
          </listitem>
        </varlistentry>
        <varlistentry>
          <term>RULEBLOCK_DIR</term>
          <listitem>
            <para>Directory to put the ruleblock configuration files into.</para>
            <para><code>RULEBLOCK_DIR="${CONFIG_DIR}/ruleblocks.d"</code></para>
          </listitem>
        </varlistentry>
        <varlistentry>
          <term>TEMPLATE_DIR</term>
          <listitem>
            <para>Directory to put the template configuration files into.</para>
            <para><code>TEMPLATE_DIR="${CONFIG_DIR}/templates.d"</code></para>
          </listitem>
        </varlistentry>
        <varlistentry>
          <term>SAVE_DIR</term>
          <listitem>
            <para>Directory used to save commands, scripts or rulesets.</para>
            <para><code>SAVE_DIR="${BASE_DIR}/save"</code></para>
          </listitem>
        </varlistentry>
      </variablelist>
    </section>
  </chapter>
  <chapter xml:id="install">
    <title>Installation</title>
    <section>
      <title>Installer</title>
      <para>An installation program comes with IP-Array. It is called install.bash and allows to
        install all necessary files at once. Also the destination directories can be given as well
        as the file ownership can be set. It's also possible to create a backup of the old files.
        The installer utilises the <command>install</command> program, for more information about it
        its man page.</para>
    </section>
    <section>
      <title>Upgrade</title>
      <important>
        <para>Always create a backup before installing a new version! Configuration files will be
          overwritten with the default ones!</para>
      </important>
    </section>
  </chapter>
  <chapter xml:id="configure">
    <title>Configuration</title>
    <para>This chapter provides information about how to configure IP-Array.</para>
    <section xml:id="config_files">
      <title>Configuration files</title>
      <para>IP-Array comes with two different kinds of configuration files. Some are written in
        shell, namely bash, syntax, while others are written in a simple XML dialect. The templates,
        ruleblocks and rule files are in XML language. All others are written in bash.</para>
      <para>
        <note>
          <para>All the configuration files are expected to be in the <varname>CONFIG_DIR</varname>
            directory, or one of it's sub directories, of the current runmode. If IP-Array is run
            with the 'test' startup parameter the location will be:
              <filename>$BASE_DIR/test/conf.d</filename>. In any other startup mode it will be:
              <filename>$BASE_DIR/stable/conf.d</filename>.</para>
        </note>
      </para>
      <section xml:id="config_files_bash">
        <title>Bash config files</title>
        <subtitle>Description of the bash (shell) configuration files</subtitle>
        <section xml:id="conf_init_script">
          <title>init script</title>
          <para>There is a <emphasis role="italic">configuration area</emphasis> in the IP-Array
            init script. The following variables can be configured there:</para>
          <para>
            <variablelist>
              <varlistentry>
                <term><varname>DEFAULTS_FILE</varname></term>
                <listitem>
                  <para>Mandatory: no - defaults to
                    <filename>/etc/default/ip-array</filename>.</para>
                  <para>Allowed values: A valid path to the defaults file (i.e:
                      <filename>/etc/default/ip-array</filename>).</para>
                  <para>Purpose: The defaults file holds startup and globally used variables.</para>
                </listitem>
              </varlistentry>
              <varlistentry>
                <term><varname>BIN_DIR</varname></term>
                <listitem>
                  <para>Mandatory: no - defaults to <filename>/usr/bin</filename>.</para>
                  <para>Allowed values: A valid path to the directory holding the executable file
                    (i.e: <filename>/usr/bin</filename>).</para>
                </listitem>
              </varlistentry>
              <varlistentry>
                <term><varname>EXE_NAME</varname></term>
                <listitem>
                  <para>Mandatory: no - defaults to <filename>ip-array</filename>.</para>
                  <para>Allowed values: The name of the executable file (i.e:
                      <filename>ip-array</filename>).</para>
                </listitem>
              </varlistentry>
              <varlistentry>
                <term><varname>DEFAULT_OPTIONS</varname></term>
                <listitem>
                  <para>Mandatory: no</para>
                  <para>Allowed values: startup parameters of IP-Array.</para>
                  <para>Purpose: These parameters will be used in any starting mode of
                    IP-Array.</para>
                </listitem>
              </varlistentry>
              <varlistentry>
                <term><varname>DEFAULT_START_OPTIONS</varname></term>
                <listitem>
                  <para>Mandatory: no</para>
                  <para>Allowed values: startup parameters of IP-Array.</para>
                  <para>Purpose: These parameters will be used in the `<emphasis role="bold"
                      >start</emphasis>' starting mode of IP-Array.</para>
                </listitem>
              </varlistentry>
              <varlistentry>
                <term><varname>DEFAULT_STOP_OPTIONS</varname></term>
                <listitem>
                  <para>Mandatory: no</para>
                  <para>Allowed values: startup parameters of IP-Array.</para>
                  <para>Purpose: These parameters will be used in the `<emphasis role="bold"
                      >stop</emphasis>' starting mode of IP-Array.</para>
                </listitem>
              </varlistentry>
              <varlistentry>
                <term><varname>MY_SHELL</varname></term>
                <listitem>
                  <para>Mandatory: no - defaults to the value defined with the variable
                      <varname>$BASH</varname> (default: <filename>/bin/bash</filename>).</para>
                  <para>Allowed values: A valid path to the shell to run IP-ARRAY with (i.e:
                      <filename>/bin/bash</filename>).</para>
                </listitem>
              </varlistentry>
            </variablelist>
          </para>
        </section>
        <section xml:id="conf_file_defaults">
          <title>Defaults (defaults.conf)</title>
          <para>The defaults file contains startup and globally used variables.</para>
          <important>
            <para>The location of the defaults file is specified in the IP-Array <link
                linkend="conf_init_script">init script</link>.</para>
            <para>The `<command>DEFAULTS_FILE</command>' variable must be pointing to the defaults
              file.</para>
          </important>
          <section>
            <title>IP-Array message (logging) output settings</title>
            <variablelist>
              <varlistentry>
                <term>
                  <varname>ENABLE_COLORS</varname>
                </term>
                <listitem>
                  <para>Mandatory: no. Defaults to `0' if unset.</para>
                  <para>Allowed values: `0' or `1'.</para>
                  <para>Purpose: Enable or disable IP-Array coloured output.</para>
                </listitem>
              </varlistentry>
              <varlistentry>
                <term>
                  <varname>ENABLE_SYSLOG</varname>
                </term>
                <listitem>
                  <para>Mandatory: no. Defaults to `0' if unset.</para>
                  <para>Allowed values: `0' or `1'.</para>
                  <para>Purpose: Enable or disable logging of IP-Array's output to syslog using the
                      <command>logger</command> utility.</para>
                </listitem>
              </varlistentry>
              <varlistentry>
                <term>
                  <varname>LOG_FACILITY</varname>
                </term>
                <listitem>
                  <para>Mandatory: no. Defaults to `local0' if unset.</para>
                  <para>Allowed values: <simplelist type="inline"
                        ><member>auth</member><member>authpriv (for security information of a
                        sensitive
                        nature)</member><member>cron</member><member>daemon</member><member>ftp</member><member>kern</member><member>lpr</member><member>mail</member><member>news</member><member>security
                        (deprecated synonym for
                        auth)</member><member>syslog</member><member>user</member><member>uucp</member><member>local0
                        to local7 inclusive</member></simplelist>.</para>
                  <para>Purpose: Configure IP-Array's syslog logging facility.</para>
                </listitem>
              </varlistentry>
              <varlistentry>
                <term>
                  <varname>VERBOSE</varname>
                </term>
                <listitem>
                  <para>Mandatory: no. Defaults to `6' if unset.</para>
                  <para>Allowed values: `0' to `8'.</para>
                  <para>Purpose: Control level of IP-Array's output verbosity.</para>
                  <tip>
                    <para>With a non zero environment variable `<varname>DEBUG_INFO</varname>',
                      additional processing (debugging) information is printed.</para>
                  </tip>
                  <orderedlist startingnumber="0">
                    <listitem>
                      <para> No messages are shown. Exit status indicates success or failure.</para>
                    </listitem>
                    <listitem>
                      <para>Shows start and end message and errors.</para>
                    </listitem>
                    <listitem>
                      <para>Main title and warning messages are also shown.</para>
                    </listitem>
                    <listitem>
                      <para>Sub title messages are shown in addition.</para>
                    </listitem>
                    <listitem>
                      <para>Info title, config and rule file loading messages, are shown
                        additionally.</para>
                    </listitem>
                    <listitem>
                      <para>Also show notice messages.</para>
                    </listitem>
                    <listitem>
                      <para>Verbose output.</para>
                    </listitem>
                    <listitem>
                      <para>Also show IP-Array internals.</para>
                    </listitem>
                    <listitem>
                      <para>Debug mode (set -x).</para>
                      <tip>
                        <para>With a non zero environment variable `<varname>DEBUG_INFO</varname>',
                          a debugging `<varname>PS4</varname>' is set.</para>
                      </tip>
                    </listitem>
                    <listitem>
                      <para>More verbose debug mode (set -vx).</para>
                    </listitem>
                  </orderedlist>
                </listitem>
              </varlistentry>
              <varlistentry>
                <term>
                  <varname>SYSLOG_VERBOSE</varname>
                </term>
                <listitem>
                  <para>Mandatory: no. Defaults to `1' if unset.</para>
                  <para>Allowed values: `0' to `6'.</para>
                  <para>Purpose: Control verbosity level of IP-Array's syslog logging.<orderedlist
                      startingnumber="0">
                      <listitem>
                        <para> Errror messages are shown.</para>
                      </listitem>
                      <listitem>
                        <para>Main title and warning messages are shown.</para>
                      </listitem>
                      <listitem>
                        <para>Subtitle messages are shown in addition.</para>
                      </listitem>
                      <listitem>
                        <para>Info title, config and rule file loading messages, are shown
                          additionally.</para>
                      </listitem>
                      <listitem>
                        <para>Also show notice messages.</para>
                      </listitem>
                      <listitem>
                        <para>Verbose output.</para>
                      </listitem>
                      <listitem>
                        <para>Also show IP-Array internals.</para>
                      </listitem>
                    </orderedlist></para>
                </listitem>
              </varlistentry>
              <varlistentry>
                <term>
                  <varname>COLOR_MSG_MAIN_TITLE</varname>
                </term>
                <listitem>
                  <para>Mandatory: no. Defaults to `magenta' if unset.</para>
                  <para>Allowed values: <simplelist type="inline"
                        ><member>black</member><member>blue</member><member>cyan</member><member>green</member><member>magenta</member><member>red</member><member>white</member><member>yellow</member></simplelist>.</para>
                  <para>Purpose: Set color for title messages.</para>
                </listitem>
              </varlistentry>
              <varlistentry>
                <term>
                  <varname>COLOR_MSG_SUBTITLE</varname>
                </term>
                <listitem>
                  <para>Mandatory: no. Defaults to `blue' if unset.</para>
                  <para>Allowed values: <simplelist type="inline"
                        ><member>black</member><member>blue</member><member>cyan</member><member>green</member><member>magenta</member><member>red</member><member>white</member><member>yellow</member></simplelist>.</para>
                  <para>Purpose: Set color for sub title messages.</para>
                </listitem>
              </varlistentry>
              <varlistentry>
                <term>
                  <varname>COLOR_MSG_INFO_TITLE</varname>
                </term>
                <listitem>
                  <para>Mandatory: no. Defaults to `cyan' if unset.</para>
                  <para>Allowed values: <simplelist type="inline"
                        ><member>black</member><member>blue</member><member>cyan</member><member>green</member><member>magenta</member><member>red</member><member>white</member><member>yellow</member></simplelist>.</para>
                  <para>Purpose: Set color for info title messages.</para>
                </listitem>
              </varlistentry>
              <varlistentry>
                <term>
                  <varname>COLOR_MSG_ERROR</varname>
                </term>
                <listitem>
                  <para>Mandatory: no. Defaults to `red' if unset.</para>
                  <para>Allowed values: <simplelist type="inline"
                        ><member>black</member><member>blue</member><member>cyan</member><member>green</member><member>magenta</member><member>red</member><member>white</member><member>yellow</member></simplelist>.</para>
                  <para>Purpose: Set color for error messages.</para>
                </listitem>
              </varlistentry>
              <varlistentry>
                <term>
                  <varname>COLOR_MSG_WARNING</varname>
                </term>
                <listitem>
                  <para>Mandatory: no. Defaults to `yellow' if unset.</para>
                  <para>Allowed values: <simplelist type="inline"
                        ><member>black</member><member>blue</member><member>cyan</member><member>green</member><member>magenta</member><member>red</member><member>white</member><member>yellow</member></simplelist>.</para>
                  <para>Purpose: Set color for warning messages.</para>
                </listitem>
              </varlistentry>
              <varlistentry>
                <term>
                  <varname>COLOR_MSG_NOTICE</varname>
                </term>
                <listitem>
                  <para>Mandatory: no. Defaults to `white' if unset.</para>
                  <para>Allowed values: <simplelist type="inline"
                        ><member>black</member><member>blue</member><member>cyan</member><member>green</member><member>magenta</member><member>red</member><member>white</member><member>yellow</member></simplelist>.</para>
                  <para>Purpose: Set color for notice messages.</para>
                </listitem>
              </varlistentry>
              <varlistentry>
                <term>
                  <varname>COLOR_MSG_CONFIG_LOAD</varname>
                </term>
                <listitem>
                  <para>Mandatory: no. Defaults to `green' if unset.</para>
                  <para>Allowed values: <simplelist type="inline"
                        ><member>black</member><member>blue</member><member>cyan</member><member>green</member><member>magenta</member><member>red</member><member>white</member><member>yellow</member></simplelist>.</para>
                  <para>Purpose: Set color for configuration file loading messages.</para>
                </listitem>
              </varlistentry>
              <varlistentry>
                <term>
                  <varname>COLOR_MSG_RULE_LOAD</varname>
                </term>
                <listitem>
                  <para>Mandatory: no. Defaults to `yellow' if unset.</para>
                  <para>Allowed values: <simplelist type="inline"
                        ><member>black</member><member>blue</member><member>cyan</member><member>green</member><member>magenta</member><member>red</member><member>white</member><member>yellow</member></simplelist>.</para>
                  <para>Purpose: Set color for rule file loading messages.</para>
                </listitem>
              </varlistentry>
            </variablelist>
          </section>
          <section>
            <title>Programs mandatory to run IP-Array</title>
            <variablelist>
              <varlistentry>
                <term>
                  <varname>AUTO_GET_PROGS</varname>
                </term>
                <listitem>
                  <para>Mandatory: no - defaults to `1'.</para>
                  <para>Allowed values: `0' or `1'.</para>
                  <para>Purpose: Configure if IP-Array should try to automatically find the
                    mandatory programs (must be in <varname>$PATH</varname>) . If disabled (set to
                    `0'), the program names varaibles (below) <emphasis role="bold">must</emphasis>
                    be configured manually.</para>
                </listitem>
              </varlistentry>
              <varlistentry>
                <term>
                  <varname>AT</varname>
                </term>
                <listitem>
                  <para>Mandatory: yes</para>
                  <para>Allowed values: A valid path to the <command>at</command> executable file
                    (i.e: <filename>/usr/bin/at</filename>), or the just the name of the program, if
                    it's found in $PATH and you do not want to use absolute paths.</para>
                </listitem>
              </varlistentry>
              <varlistentry>
                <term>
                  <varname>CAT</varname></term>
                <listitem>
                  <para>Mandatory: yes</para>
                  <para>Allowed values: A valid path to the <command>cat</command> executable file
                    (i.e: <filename>/bin/cat</filename>), or the just the name of the program, if
                    it's found in $PATH and you do not want to use absolute paths.</para>
                </listitem>
              </varlistentry>
              <varlistentry>
                <term>
                  <varname>DATE</varname>
                </term>
                <listitem>
                  <para>Mandatory: yes</para>
                  <para>Allowed values: A valid path to the <command>date</command> executable file
                    (i.e: <filename>/bin/date</filename>), or the just the name of the program, if
                    it's found in $PATH and you do not want to use absolute paths.</para>
                </listitem>
              </varlistentry>
              <varlistentry>
                <term>
                  <varname>DIFF</varname>
                </term>
                <listitem>
                  <para>Mandatory: yes</para>
                  <para>Allowed values: A valid path to the <command>diff</command> executable file
                    (i.e: <filename>/usr/bin/diff</filename>), or the just the name of the program,
                    if it's found in $PATH and you do not want to use absolute paths.</para>
                </listitem>
              </varlistentry>
              <varlistentry>
                <term>
                  <varname>FIND</varname>
                </term>
                <listitem>
                  <para>Mandatory: yes</para>
                  <para>Allowed values: A valid path to the <command>find</command> executable file
                    (i.e: <filename>/usr/bin/find</filename>), or the just the name of the program,
                    if it's found in $PATH and you do not want to use absolute paths.</para>
                </listitem>
              </varlistentry>
              <varlistentry>
                <term>
                  <varname>GREP</varname>
                </term>
                <listitem>
                  <para>Mandatory: yes</para>
                  <para>Allowed values: A valid path to the <command>grep</command> executable file
                    (i.e: <filename>/bin/grep</filename>), or the just the name of the program, if
                    it's found in $PATH and you do not want to use absolute paths.</para>
                </listitem>
              </varlistentry>
              <varlistentry>
                <term>
                  <varname>IP</varname>
                </term>
                <listitem>
                  <para>Mandatory: yes</para>
                  <para>Allowed values: A valid path to the <command>ip</command> executable file
                    (i.e: <filename>/sbin/ip</filename>), or the just the name of the program, if
                    it's found in $PATH and you do not want to use absolute paths.</para>
                </listitem>
              </varlistentry>
              <varlistentry>
                <term>
                  <varname>IPSET</varname>
                </term>
                <listitem>
                  <para>Mandatory: no</para>
                  <para>Allowed values: A valid path to the <command>ipset</command> executable file
                    (i.e: <filename>/sbin/ipset</filename>), or the just the name of the program, if
                    it's found in $PATH and you do not want to use absolute paths.</para>
                </listitem>
              </varlistentry>
              <varlistentry>
                <term>
                  <varname>IPT</varname>
                </term>
                <listitem>
                  <para>Mandatory: yes</para>
                  <para>Allowed values: A valid path to the <command>iptables</command> executable
                    file (i.e: <filename>/sbin/iptables</filename>), or the just the name of the
                    program, if it's found in $PATH and you do not want to use absolute
                    paths.</para>
                </listitem>
              </varlistentry>
              <varlistentry>
                <term>
                  <varname>LOGGER</varname>
                </term>
                <listitem>
                  <para>Mandatory: no</para>
                  <para>Allowed values: A valid path to the <command>logger</command> executable
                    file (i.e: <filename>/usr/bin/logger</filename>), or the just the name of the
                    program, if it's found in $PATH and you do not want to use absolute
                    paths.</para>
                </listitem>
              </varlistentry>
              <varlistentry>
                <term>
                  <varname>LSMOD</varname>
                </term>
                <listitem>
                  <para>Mandatory: yes</para>
                  <para>Allowed values: A valid path to the <command>lsmod</command> executable file
                    (i.e: <filename>/sbin/lsmod</filename>), or the just the name of the program, if
                    it's found in $PATH and you do not want to use absolute paths.</para>
                </listitem>
              </varlistentry>
              <varlistentry>
                <term>
                  <varname>MODPROBE</varname>
                </term>
                <listitem>
                  <para>Mandatory: yes</para>
                  <para>Allowed values: A valid path to the <command>modprobe</command> executable
                    file (i.e: <filename>/sbin/modprobe</filename>), or the just the name of the
                    program, if it's found in $PATH and you do not want to use absolute
                    paths.</para>
                </listitem>
              </varlistentry>
              <varlistentry>
                <term>
                  <varname>NFACCT</varname>
                </term>
                <listitem>
                  <para>Mandatory: no</para>
                  <para>Allowed values: A valid path to the <command>nfacct</command> executable
                    file (i.e: <filename>/usr/sbin/nfacct</filename>), or the just the name of the
                    program, if it's found in $PATH and you do not want to use absolute
                    paths.</para>
                </listitem>
              </varlistentry>
              <varlistentry>
                <term>
                  <varname>RM</varname>
                </term>
                <listitem>
                  <para>Mandatory: yes</para>
                  <para>Allowed values: A valid path to the <command>rm</command> executable file
                    (i.e: <filename>/bin/rm</filename>), or the just the name of the program, if
                    it's found in $PATH and you do not want to use absolute paths.</para>
                </listitem>
              </varlistentry>
              <varlistentry>
                <term>
                  <varname>IPT_SAVE</varname>
                </term>
                <listitem>
                  <para>Mandatory: yes</para>
                  <para>Allowed values: A valid path to the <command>iptables-save</command>
                    executable file (i.e: <filename>/sbin/iptables-save</filename>), or the just the
                    name of the program, if it's found in $PATH and you do not want to use absolute
                    paths.</para>
                  <para>This variable is only used by the IP-Array init script. It is not globally
                    available.</para>
                </listitem>
              </varlistentry>
              <varlistentry>
                <term>
                  <varname>IPT_RESTORE</varname>
                </term>
                <listitem>
                  <para>Mandatory: yes</para>
                  <para>Allowed values: A valid path to the <command>iptables-restore</command>
                    executable file (i.e: <filename>/sbin/iptables-restore</filename>), or the just
                    the name of the program, if it's found in $PATH and you do not want to use
                    absolute paths.</para>
                  <para>This variable is only used by the IP-Array init script. It is not globally
                    available.</para>
                </listitem>
              </varlistentry>
              <varlistentry>
                <term>
                  <varname>SORT</varname>
                </term>
                <listitem>
                  <para>Mandatory: yes</para>
                  <para>Allowed values: A valid path to the <command>sort</command> executable file
                    (i.e: <filename>/usr/bin/sort</filename>), or the just the name of the program,
                    if it's found in $PATH and you do not want to use absolute paths.</para>
                </listitem>
              </varlistentry>
              <varlistentry>
                <term>
                  <varname>TC</varname>
                </term>
                <listitem>
                  <para>Mandatory: no</para>
                  <para>Allowed values: A valid path to the <command>tc</command> executable file
                    (i.e: <filename>/sbin/tc</filename>), or the just the name of the program, if
                    it's found in $PATH and you do not want to use absolute paths.</para>
                </listitem>
              </varlistentry>
              <varlistentry>
                <term>
                  <varname>UNAME</varname>
                </term>
                <listitem>
                  <para>Mandatory: yes</para>
                  <para>Allowed values: A valid path to the <command>uname</command> executable file
                    (i.e: <filename>/bin/uname</filename>), or the just the name of the program, if
                    it's found in $PATH and you do not want to use absolute paths.</para>
                </listitem>
              </varlistentry>
            </variablelist>
          </section>
          <section>
            <title>Files and directories</title>
            <variablelist>
              <varlistentry>
                <term>
                  <varname>BASE_DIR</varname>
                </term>
                <listitem>
                  <para>Mandatory: no - defaults to <filename>/etc/ip-array</filename>.</para>
                  <para>Allowed values: A valid path (i.e.:
                    <filename>/etc/ip-array</filename>).</para>
                  <para>IP-Array base directory.</para>
                </listitem>
              </varlistentry>
              <varlistentry>
                <term>
                  <varname>CONFIG</varname>
                </term>
                <listitem>
                  <para>Mandatory: no - defaults to <filename>ip-array.conf</filename>.</para>
                  <para>Allowed values: A valid filename (i.e.:
                    <filename>ip-array.conf</filename>).</para>
                  <para>Name of the main configuration file.</para>
                </listitem>
              </varlistentry>
              <varlistentry>
                <term>
                  <varname>CONF_DIR</varname>
                </term>
                <listitem>
                  <para>Mandatory: no - defaults to <filename>conf.d</filename>.</para>
                  <para>Allowed values: A valid directory name (i.e.:
                    <filename>conf.d</filename>).</para>
                  <para>Configuration directory must be below <varname>BASE_DIR</varname>.</para>
                </listitem>
              </varlistentry>
              <varlistentry>
                <term>
                  <varname>LIB_DIR</varname>
                </term>
                <listitem>
                  <para>Mandatory: no - defaults to <filename>/usr/lib/ip-array</filename>.</para>
                  <para>Allowed values: A valid path (i.e.:
                    <filename>/usr/lib/ip-array</filename>).</para>
                  <para>Library directory used for the IP-Array function files.</para>
                </listitem>
              </varlistentry>
              <varlistentry>
                <term>
                  <varname>LOCK_DIR</varname>
                </term>
                <listitem>
                  <para>Mandatory: no - defaults to <filename>/var/run</filename>.</para>
                  <para>Allowed values: A valid path (i.e.: <filename>/var/run</filename>).</para>
                  <para>Directory to put the IP-Array PID file into.</para>
                </listitem>
              </varlistentry>
              <varlistentry>
                <term>
                  <varname>SHARE_DIR</varname>
                </term>
                <listitem>
                  <para>Mandatory: no - defaults to <filename>/usr/share/ip-array</filename>.</para>
                  <para>Allowed values: A valid path (i.e.:
                    <filename>/usr/share/ip-array</filename>).</para>
                  <para>Data directory.</para>
                </listitem>
              </varlistentry>
              <varlistentry>
                <term>
                  <varname>SAVE_FILE</varname>
                </term>
                <listitem>
                  <para>Mandatory: no - defaults to
                    <filename>iptables_ruleset.save</filename>.</para>
                  <para>Allowed values: A valid filename (i.e.:
                      <filename>iptables_ruleset.save</filename>).</para>
                  <para>File to put the iptables-save output into, when executing IP-Array with the
                    'save' startup parameter.</para>
                </listitem>
              </varlistentry>
              <varlistentry>
                <term>
                  <varname>IPSET_SAVE_FILE</varname>
                </term>
                <listitem>
                  <para>Mandatory: no - defaults to <filename>ipset_ruleset.save</filename>.</para>
                  <para>Allowed values: A valid filename (i.e.:
                      <filename>ipset_ruleset.save</filename>).</para>
                  <para>File to put the ipset save output into, when executing IP-Array with the
                    'save' startup parameter.</para>
                </listitem>
              </varlistentry>
              <varlistentry>
                <term>
                  <varname>RULESETFILE</varname>
                </term>
                <listitem>
                  <para>Mandatory: no - defaults to
                    <filename>ip-array_commands.bash</filename>.</para>
                  <para>Allowed values: A valid filename (i.e.:
                      <filename>ip-array_commands.bash</filename>).</para>
                  <para>File where the generated commands will be saved, if executing IP-Array with
                    one of the 'save[ -iptables | -modprobe | -proc | -tc | -shaping ]-commands'
                    parameters. The target directory will be
                    <command>$BASE_DIR/save.d</command>.</para>
                </listitem>
              </varlistentry>
              <varlistentry>
                <term>
                  <varname>DIFF_FILE</varname>
                </term>
                <listitem>
                  <para>Mandatory: no - defaults to
                      <filename>iptables_ruleset_saved_for_diff</filename>.</para>
                  <para>Allowed values: A valid filename (i.e.:
                      <filename>iptables_ruleset_saved_for_diff</filename>).</para>
                  <para>File to save the iptables rule listing (iptables -nL) into, after applying
                    the rules. The target directory will be
                    <command>$BASE_DIR/save.d</command>.</para>
                  <para>This file will be used to check for a difference to the currently active
                    ruleset, when using the 'diff-last-activated' startup parameter.</para>
                </listitem>
              </varlistentry>
              <varlistentry>
                <term>
                  <varname>SERVICES</varname>
                </term>
                <listitem>
                  <para>Mandatory: no - defaults to <filename>/etc/services</filename>.</para>
                  <para>Allowed values: A valid path to the services file (most likely:
                      <filename>/etc/services</filename>).</para>
                  <para>Purpose: Configure the location of the services file (containing service
                    definitions).</para>
                </listitem>
              </varlistentry>
              <varlistentry>
                <term>
                  <varname>PROTOCOLS</varname>
                </term>
                <listitem>
                  <para>Mandatory: no - defaults to <filename>/etc/protocols</filename>.</para>
                  <para>Allowed values: A valid path to the services file (most likely:
                      <filename>/etc/protocols</filename>).</para>
                  <para>Purpose: Configure the location of the protocols file (containing protocol
                    definitions).</para>
                </listitem>
              </varlistentry>
            </variablelist>
          </section>
          <section>
            <title>Quick start settings</title>
            <para>Files to load, if <varname>RESTORE_ON_START</varname> is `1'.</para>
            <variablelist>
              <varlistentry>
                <term>
                  <varname>KNOWN_GOOD_RULESET</varname>
                </term>
                <listitem>
                  <para>Mandatory: no - defaults to
                    <filename>KNOWN_GOOD_RULESET.save</filename>.</para>
                  <para>Allowed values: A valid filename (i.e.:
                      <filename>KNOWN_GOOD_RULESET.save</filename>).</para>
                  <para>File to save the currently active 'known good' ruleset. This file will be
                    used to restore the ruleset on 'start', if <varname>RESTORE_ON_START</varname>
                    is enabled.</para>
                </listitem>
              </varlistentry>
              <varlistentry>
                <term>
                  <varname>RESTORE_ON_START</varname>
                </term>
                <listitem>
                  <para>Mandatory: no - defaults to `0'.</para>
                  <para>Allowed values: `0' to disable `1' to enable.</para>
                  <para>Loads the ruleset saved into <varname>$KNOWN_GOOG_RULESET</varname>, if
                    IP-Array is loaded with the `start' parameter (faster startup also called quick
                    start).</para>
                </listitem>
              </varlistentry>
            </variablelist>
          </section>
          <section>
            <title>Basic configuration variables</title>
            <variablelist>
              <varlistentry>
                <term>
                  <varname>RELOAD_TIME</varname>
                </term>
                <listitem>
                  <para>Mandatory: no - defaults to 7.</para>
                  <para>Allowed values: Any value from 1 to 15.</para>
                  <para>Time period until the previously saved ruleset will be restored, when using
                    the 'test' startup parameter.<warning>
                      <para>If <command>iptables-save</command> or
                          <command>iptables-restore</command> fails for some reason, the 'test'
                        parameter will not work, thus this setting will not produce the desired
                        effect.</para>
                    </warning></para>
                </listitem>
              </varlistentry>
              <varlistentry>
                <term>
                  <varname>GEN_FORMAT</varname>
                </term>
                <listitem>
                  <para>Mandatory: no - defaults to `cmd'.</para>
                  <para>Allowed values: `cmd': generated commands will be save as list of commands.
                    ´ipt': generated commands will be used in iptables-save format (faster loading
                    time).</para>
                </listitem>
              </varlistentry>
              <varlistentry>
                <term>
                  <varname>IPTSAVE_FAILS</varname>
                </term>
                <listitem>
                  <para>Mandatory: no - defaults to `0'.</para>
                  <para>Allowed values: `0' or `1'.</para>
                  <para>Enable this if saving or restoring with <command>iptables-save</command> or
                      <command>iptables-restore</command> fails for some reason.</para>
                  <para>
                    <important>
                      <para>Any startup mode, that utilizes <command>iptables-save</command> or
                          <command>iptables-restore</command> will not work in that case.</para>
                    </important>
                  </para>
                </listitem>
              </varlistentry>
              <varlistentry>
                <term>
                  <varname>USE_IPSET</varname>
                </term>
                <listitem>
                  <para>Mandatory: no - defaults to `0'.</para>
                  <para>Allowed values: `0' or `1'.</para>
                  <para>Enable or disable the usage of ipset.</para>
                </listitem>
              </varlistentry>
              <varlistentry>
                <term>
                  <varname>MAX_SETS</varname>
                </term>
                <listitem>
                  <para>Mandatory: no - defaults to `256'.</para>
                  <para>Allowed values: The value compiled into your kernel.</para>
                  <para>The maximal amount of ipset sets to create.</para>
                </listitem>
              </varlistentry>
              <varlistentry>
                <term>
                  <varname>SYNTAX_CHECK</varname>
                </term>
                <listitem>
                  <para>Mandatory: no - defaults to `1'.</para>
                  <para>Allowed values: `0' or `1'.</para>
                  <para>Purpose: Perform a bash grammar check before sourcing or executing files.
                    The bash grammar check is done using `<code>bash -n file</code>'. Thus the
                    syntax check is very basic and may not catch all errors (as described in
                      `<code>man bash</code>').</para>
                </listitem>
              </varlistentry>
            </variablelist>
          </section>
        </section>
        <section xml:id="conf_file_main_conf">
          <title>Main configuration file (ip-array.conf)</title>
          <para>This file is the main IP-Array configuration file.</para>
          <para>
            <variablelist>
              <varlistentry>
                <term>CONFIG_FILES</term>
                <listitem>
                  <para>Names of the configuration files which will be loaded in order of
                    appearence. i.e. CONFIG_FILES="aliases.conf global.conf"</para>
                </listitem>
              </varlistentry>
              <varlistentry>
                <term>BASE_TEMPLATES</term>
                <listitem>
                  <para>Names of the basic XML template files.</para>
                </listitem>
              </varlistentry>
              <varlistentry>
                <term>ENABLE_FILTER</term>
                <listitem>
                  <para>Enable or disable loading of the iptables filter table configuration. Valid
                    values are `0' or `1'.</para>
                </listitem>
              </varlistentry>
              <varlistentry>
                <term>IPT_FILTER_TEMPLATES</term>
                <listitem>
                  <para>Names of the iptables filter table XML templates files.</para>
                </listitem>
              </varlistentry>
              <varlistentry>
                <term>FILTER_RULEBLOCKS</term>
                <listitem>
                  <para>Names of the iptables filter table ruleblocks files.</para>
                </listitem>
              </varlistentry>
              <varlistentry>
                <term>FILTER_RULES</term>
                <listitem>
                  <para>Names of the iptables filter table rule files.</para>
                </listitem>
              </varlistentry>
              <varlistentry>
                <term>ENABLE_MANGLE</term>
                <listitem>
                  <para>Enable or disable loading of the iptables mangle table configuration. Valid
                    values are `0' or `1'.</para>
                </listitem>
              </varlistentry>
              <varlistentry>
                <term>IPT_MANGLE_TEMPLATES</term>
                <listitem>
                  <para>Names of the iptables mangle table XML templates files.</para>
                </listitem>
              </varlistentry>
              <varlistentry>
                <term>MANGLE_RULEBLOCKS</term>
                <listitem>
                  <para>Names of the iptables mangle table ruleblocks files.</para>
                </listitem>
              </varlistentry>
              <varlistentry>
                <term>MANGLE_RULES</term>
                <listitem>
                  <para>Names of the iptables mangle table rule files.</para>
                </listitem>
              </varlistentry>
              <varlistentry>
                <term>ENABLE_NAT</term>
                <listitem>
                  <para>Enable or disable loading of the iptables nat table configuration. Valid
                    values are `0' or `1'.</para>
                </listitem>
              </varlistentry>
              <varlistentry>
                <term>IPT_NAT_TEMPLATES</term>
                <listitem>
                  <para>Names of the iptables nat table XML templates files.</para>
                </listitem>
              </varlistentry>
              <varlistentry>
                <term>NAT_RULEBLOCKS</term>
                <listitem>
                  <para>Names of the iptables nat table ruleblocks files.</para>
                </listitem>
              </varlistentry>
              <varlistentry>
                <term>NAT_RULES</term>
                <listitem>
                  <para>Names of the iptables nat table rule files.</para>
                </listitem>
              </varlistentry>
              <varlistentry>
                <term>ENABLE_RAW</term>
                <listitem>
                  <para>Enable or disable loading of the iptables raw table configuration. Valid
                    values are `0' or `1'.</para>
                </listitem>
              </varlistentry>
              <varlistentry>
                <term>IPT_RAW_TEMPLATES</term>
                <listitem>
                  <para>Names of the iptables raw table XML templates files.</para>
                </listitem>
              </varlistentry>
              <varlistentry>
                <term>RAW_RULEBLOCKS</term>
                <listitem>
                  <para>Names of the iptables raw table ruleblocks files.</para>
                </listitem>
              </varlistentry>
              <varlistentry>
                <term>RAW_RULES</term>
                <listitem>
                  <para>Names of the iptables raw table rule files.</para>
                </listitem>
              </varlistentry>
              <varlistentry>
                <term>ENABLE_RAWPOST</term>
                <listitem>
                  <para>Enable or disable loading of the iptables rawpost table configuration. Only
                    works if xtables-addons are installed. Valid values are `0' or `1'.</para>
                </listitem>
              </varlistentry>
              <varlistentry>
                <term>IPT_RAWPOST_TEMPLATES</term>
                <listitem>
                  <para>Names of the iptables rawpost table XML templates files. Only works if
                    xtables-addons are installed.</para>
                </listitem>
              </varlistentry>
              <varlistentry>
                <term>RAWPOST_RULEBLOCKS</term>
                <listitem>
                  <para>Names of the iptables rawpost table ruleblocks files. Only works if
                    xtables-addons are installed.</para>
                </listitem>
              </varlistentry>
              <varlistentry>
                <term>RAWPOST_RULES</term>
                <listitem>
                  <para>Names of the iptables rawpost table rule files. Only works if xtables-addons
                    are installed.</para>
                </listitem>
              </varlistentry>
              <varlistentry>
                <term>ENABLE_SECURITY</term>
                <listitem>
                  <para>Enable or disable loading of the iptables security table configuration.
                    Valid values are `0' or `1'.</para>
                </listitem>
              </varlistentry>
              <varlistentry>
                <term>IPT_SECURITY_TEMPLATES</term>
                <listitem>
                  <para>Names of the iptables security table XML templates files.</para>
                </listitem>
              </varlistentry>
              <varlistentry>
                <term>SECURITY_RULEBLOCKS</term>
                <listitem>
                  <para>Names of the iptables security table ruleblocks files.</para>
                </listitem>
              </varlistentry>
              <varlistentry>
                <term>SECURITY_RULES</term>
                <listitem>
                  <para>Names of the iptables security table rule files.</para>
                </listitem>
              </varlistentry>
              <varlistentry>
                <term>IPSET_RULES</term>
                <listitem>
                  <para>Names of the ipset rule files.</para>
                </listitem>
              </varlistentry>
              <varlistentry>
                <term>MODULE_DIR</term>
                <listitem>
                  <para>Patch to the kernels module directory.</para>
                </listitem>
              </varlistentry>
              <varlistentry>
                <term>MODULES_TO_LOAD</term>
                <listitem>
                  <para>Select the kernel modules to load. Entries are separated by newline.</para>
                  <para>Format: <synopsis>module-name [parameters [...]]</synopsis></para>
                </listitem>
              </varlistentry>
              <varlistentry>
                <term>MODS_TO_RM</term>
                <listitem>
                  <para>Select the kernel modules to remove.</para>
                </listitem>
              </varlistentry>
              <varlistentry>
                <term>LOOPBACK_IF</term>
                <listitem>
                  <para>Allowed values: A valid interface name. </para>
                  <para>Purpose: Name of the loopback interface.</para>
                </listitem>
              </varlistentry>
              <varlistentry>
                <term>NET_INTERFACES</term>
                <listitem>
                  <para>Types: ext | local | ipsec</para>
                  <para>
                    <table frame="all">
                      <title>Configure networking interfaces</title>
                      <tgroup cols="4" align="left">
                        <colspec colname="c1" colnum="1"/>
                        <colspec colname="c2" colnum="2"/>
                        <colspec colname="c3" colnum="3"/>
                        <colspec colname="c4" colnum="4"/>
                        <thead>
                          <row>
                            <entry>Inteface name</entry>
                            <entry>Interface alias</entry>
                            <entry>Type[:ipsec]</entry>
                            <entry>Network name</entry>
                          </row>
                        </thead>
                        <tbody>
                          <row>
                            <entry>eth0</entry>
                            <entry>eth0</entry>
                            <entry>ext:ipsec</entry>
                            <entry>INET_CON_X</entry>
                          </row>
                          <row>
                            <entry>eth1</entry>
                            <entry>eth1</entry>
                            <entry>ext</entry>
                            <entry>INET_CON_Y</entry>
                          </row>
                          <row>
                            <entry>eth2</entry>
                            <entry>eth2</entry>
                            <entry>local</entry>
                            <entry>PRODUCTION</entry>
                          </row>
                          <row>
                            <entry>eth2</entry>
                            <entry>eth2:0</entry>
                            <entry>local</entry>
                            <entry>DEVELOPMENT</entry>
                          </row>
                          <row>
                            <entry>eth3</entry>
                            <entry>eth3</entry>
                            <entry>local</entry>
                            <entry>DMZ</entry>
                          </row>
                          <row>
                            <entry>ipsec0</entry>
                            <entry>ipsec0</entry>
                            <entry>ipsec</entry>
                            <entry>VPN_REMOTE_OFFICE</entry>
                          </row>
                        </tbody>
                      </tgroup>
                    </table>
                  </para>
                </listitem>
              </varlistentry>
              <varlistentry>
                <term>SCRIPT_MAP</term>
                <listitem>
                  <para>The purpose of this variable is to configure which scripts will run at what
                    startup mode.</para>
                  <para>The format is (newline separates entries):</para>
                  <para>
                    <synopsis>startup-parameter-name[,...] { prolog | epilog } script-name { prolog | epilog } script-name</synopsis>
                  </para>
                  <para>Example:</para>
                  <para>start,restart prolog my_start_prolog-script epilog
                    my_start_epilog-script</para>
                </listitem>
              </varlistentry>
              <varlistentry>
                <term>POLICY_MAP</term>
                <listitem>
                  <para>The purpose of this variable is to configure the policy for buitin iptables
                    chains.</para>
                  <para>The format is (newline separates entries):</para>
                  <para>
                    <synopsis>table chain policy</synopsis>
                  </para>
                  <para>Example:</para>
                  <para>filter INPUT DROP</para>
                  <para>filter OUTPUT ACCEPT</para>
                </listitem>
              </varlistentry>
              <varlistentry>
                <term>ALLOW_LOOPBACK</term>
                <listitem>
                  <para>Allow communication to and from the loopback interface. Valid values: `0' or
                    `1'.</para>
                </listitem>
              </varlistentry>
              <varlistentry>
                <term>ADMIN_CONNECTION</term>
                <listitem>
                  <para>Define an administrative connection, which will be allowed under certain
                    conditions. The conditions are:</para>
                  <para>
                    <itemizedlist>
                      <listitem>
                        <para>If the enviroment variable $SSH_CONNECTION is not available, otherwise
                          those values will always be used.</para>
                      </listitem>
                      <listitem>
                        <para>When IP-Array enters lockdown mode in start mode.</para>
                      </listitem>
                      <listitem>
                        <para>In restore mode, if ipset is used.</para>
                      </listitem>
                      <listitem>
                        <para>In lockdown mode.</para>
                      </listitem>
                      <listitem>
                        <para>On a fail condition (an error occured while applying a
                          ruleset).</para>
                      </listitem>
                    </itemizedlist>
                  </para>
                  <para>The format is:
                    <synopsis>admin_source-IP local_destination-IP local_destination-port</synopsis></para>
                </listitem>
              </varlistentry>
              <varlistentry>
                <term>CHAIN_MAP</term>
                <listitem>
                  <para>The purpose of this variable is to create custom iptables chains.</para>
                  <para>The format is (newline separates entries):</para>
                  <para>
                    <synopsis>table chain-name [...]</synopsis>
                  </para>
                  <para>Example:</para>
                  <para>filter chain1 chain2</para>
                  <para>mangle mchain1 mchain2</para>
                </listitem>
              </varlistentry>
              <varlistentry>
                <term>JUMP_TREE</term>
                <listitem>
                  <para>The purpose of this variable is to create an automated jump tree of iptables
                    chains.</para>
                  <para>The format is:</para>
                  <para>
                    <synopsis>{ none | interface | netname | netname+interface } { table-name [...] | all }</synopsis>
                  </para>
                  <para>`none' disables jump tree creation (undefined variable does the
                    same).</para>
                  <para>`interface' means to create a jump tree categorised by interfaces.</para>
                  <para>`netname' means to create a jump tree categorised by networks.</para>
                  <para>`netname+interface' means to create a jump tree categorised by interfaces
                    and their networks.</para>
                  <para>`table' defines in which table the jump tree will be created. A value of
                    `all' will cause creation in all tables.</para>
                  <para>Examples:</para>
                  <para>JUMP_TREE="interface filter mangle"</para>
                  <para>JUMP_TREE="netname all"</para>
                </listitem>
              </varlistentry>
              <varlistentry>
                <term>JUMP_TREE_CHAINS_CREATE_ALL</term>
                <listitem>
                  <para>Valid values: `0' or `1'.</para>
                  <para>Enable or disable automatic creation of all jump tree chains.</para>
                </listitem>
              </varlistentry>
              <varlistentry>
                <term>REMOVE_EMPTY_CHAINS</term>
                <listitem>
                  <para>Valid values: `0' or `1'.</para>
                  <para>Remove empty chains after applying the ruleset.</para>
                </listitem>
              </varlistentry>
              <varlistentry>
                <term>REMOVE_UNREF_CHAINS</term>
                <listitem>
                  <para>Valid values: `0' or `1'.</para>
                  <para>Remove unreferenced chains after applying the ruleset.</para>
                </listitem>
              </varlistentry>
              <varlistentry>
                <term>KNOWN_TRAFFIC_MAP</term>
                <listitem>
                  <para>This allows to define which and where the rules are created, which deal with
                    the return traffic identified by the connection tracker. The format is (newline
                    separates entries): <synopsis>chain [ state ] [ top | bottom ]</synopsis></para>
                  <para>state can be either E, R or ER (ESTABLESHED, RELATED or ESTABLISHED and
                    RELATED). top or bottom define wheter the rule should be placed on top or bottom
                    of the rule stack.</para>
                </listitem>
              </varlistentry>
              <varlistentry>
                <term>REVERSE_INPUT_RULES_REQUIRED</term>
                <listitem>
                  <para>Valid values: `0' or `1'.</para>
                  <para>In a ruleblock which uses a template definition that uses the reverse
                    (return) mode to generate bidirectional rules, define if those are needed (i.e.
                      <varname>KNOWN_TRAFFIC_MAP</varname> is not used). This applies to traffic
                    entering the INPUT chain.</para>
                </listitem>
              </varlistentry>
              <varlistentry>
                <term>REVERSE_FORWARD_RULES_REQUIRED</term>
                <listitem>
                  <para>Valid values: `0' or `1'.</para>
                  <para>In a ruleblock which uses a template definition that uses the reverse
                    (return) mode to generate bidirectional rules, define if those are needed (i.e.
                      <varname>KNOWN_TRAFFIC_MAP</varname> is not used). This applies to traffic
                    entering the FORWARD chain.</para>
                </listitem>
              </varlistentry>
              <varlistentry>
                <term>FINAL_RULE_MAP</term>
                <listitem>
                  <para>Define a terminating rule for custom or builtin chains. Format:
                    <synopsis>chain action [ limit:burst:value ] ] [ log-level ] [ log-options ]</synopsis></para>
                  <para>chain = the name of the chain. action = the target. See the help of the
                    iptables arguments for the other entries (<command>ip-array show -sc
                      ipt_args:limit,log-level,log-options</command>).</para>
                </listitem>
              </varlistentry>
              <varlistentry>
                <term>LOG_INVALID</term>
                <listitem>
                  <para>Valid values: `0' or `1'.</para>
                  <para>Log packets in invalid state. The logging options are defined with the
                    global log options.</para>
                </listitem>
              </varlistentry>
              <varlistentry>
                <term>BLOCK_INVALID</term>
                <listitem>
                  <para>Valid values: `0' or `1'.</para>
                  <para>Drop packets in invalid state.</para>
                </listitem>
              </varlistentry>
              <varlistentry>
                <term>LOG_ILLEGAL</term>
                <listitem>
                  <para>Valid values: `0' or `1'.</para>
                  <para>Log illegal TCP packets. The logging options are defined with the global log
                    options.</para>
                </listitem>
              </varlistentry>
              <varlistentry>
                <term>BLOCK_ILLEGAL</term>
                <listitem>
                  <para>Valid values: `0' or `1'.</para>
                  <para>Drop illegal TCP packets.</para>
                </listitem>
              </varlistentry>
              <varlistentry>
                <term>LAN_FTP</term>
                <listitem>
                  <para>Select LAN interface from where FTP traffic is permitted. Format (newline
                    separates entries):
                    <synopsis>lan-interface[:external-interface][:active|passive] [...]</synopsis></para>
                  <para>i.e. <code>eth1:eth0:active</code> or <code>eth2</code> or
                      <code>eth1::passive</code></para>
                </listitem>
              </varlistentry>
              <varlistentry>
                <term>AUTO_PROV_DNS</term>
                <listitem>
                  <para>Valid values: `0' or `1'.</para>
                  <para/>
                </listitem>
              </varlistentry>
              <varlistentry>
                <term>ENABLE_IPSEC</term>
                <listitem>
                  <para>Valid values: `0' or `1'.</para>
                  <para/>
                </listitem>
              </varlistentry>
              <varlistentry>
                <term>ALLOW_ALL_BRANCH</term>
                <listitem>
                  <para>Valid values: `0' or `1'.</para>
                  <para/>
                </listitem>
              </varlistentry>
              <varlistentry>
                <term>IPSEC_RULES</term>
                <listitem>
                  <para/>
                </listitem>
              </varlistentry>
              <varlistentry>
                <term>ENABLE_TC_SHAPING</term>
                <listitem>
                  <para/>
                </listitem>
              </varlistentry>
              <varlistentry>
                <term>TC_MARK_RULES</term>
                <listitem>
                  <para/>
                </listitem>
              </varlistentry>
              <varlistentry>
                <term>OUTPUT_BULK</term>
                <listitem>
                  <para/>
                </listitem>
              </varlistentry>
              <varlistentry>
                <term>FORWARD_BULK</term>
                <listitem>
                  <para/>
                </listitem>
              </varlistentry>
              <varlistentry>
                <term>PRIORITIZE_SYN</term>
                <listitem>
                  <para/>
                </listitem>
              </varlistentry>
              <varlistentry>
                <term>AUTO_ISP_SMTP</term>
                <listitem>
                  <para/>
                </listitem>
              </varlistentry>
              <varlistentry>
                <term>RESTRICT_OUTPUT</term>
                <listitem>
                  <para/>
                </listitem>
              </varlistentry>
              <varlistentry>
                <term>REST_OUT_DNS_ALLOW</term>
                <listitem>
                  <para/>
                </listitem>
              </varlistentry>
              <varlistentry>
                <term>REST_OUT_NTP_ALLOW</term>
                <listitem>
                  <para/>
                </listitem>
              </varlistentry>
              <varlistentry>
                <term>REST_OUT_LAN_ALLOW</term>
                <listitem>
                  <para/>
                </listitem>
              </varlistentry>
              <varlistentry>
                <term>REST_ALLOW_RELATED</term>
                <listitem>
                  <para/>
                </listitem>
              </varlistentry>
              <varlistentry>
                <term>REJECT_AUTH</term>
                <listitem>
                  <para/>
                </listitem>
              </varlistentry>
              <varlistentry>
                <term>DROP_NETBIOS</term>
                <listitem>
                  <para/>
                </listitem>
              </varlistentry>
              <varlistentry>
                <term>DROP_DHCP</term>
                <listitem>
                  <para/>
                </listitem>
              </varlistentry>
              <varlistentry>
                <term>DROP_UPNP</term>
                <listitem>
                  <para/>
                </listitem>
              </varlistentry>
              <varlistentry>
                <term>DROP_Stealth_XMAS</term>
                <listitem>
                  <para/>
                </listitem>
              </varlistentry>
              <varlistentry>
                <term>DROP_Stealth_XMAS_PSH</term>
                <listitem>
                  <para/>
                </listitem>
              </varlistentry>
              <varlistentry>
                <term>DROP_Stealth_XMAS_ALL</term>
                <listitem>
                  <para/>
                </listitem>
              </varlistentry>
              <varlistentry>
                <term>DROP_Stealth_FIN</term>
                <listitem>
                  <para/>
                </listitem>
              </varlistentry>
              <varlistentry>
                <term>DROP_Stealth_SYN_RST</term>
                <listitem>
                  <para/>
                </listitem>
              </varlistentry>
              <varlistentry>
                <term>DROP_Stealth_SYN_FIN</term>
                <listitem>
                  <para/>
                </listitem>
              </varlistentry>
              <varlistentry>
                <term>DROP_Stealth_Null</term>
                <listitem>
                  <para/>
                </listitem>
              </varlistentry>
              <varlistentry>
                <term>EXIT_ON_ERROR</term>
                <listitem>
                  <para/>
                </listitem>
              </varlistentry>
              <varlistentry>
                <term>RULE_PLACEHOLDER</term>
                <listitem>
                  <para/>
                </listitem>
              </varlistentry>
              <varlistentry>
                <term>TCPMSS_TO_MTU</term>
                <listitem>
                  <para/>
                </listitem>
              </varlistentry>
              <varlistentry>
                <term>LOG_PREFIX</term>
                <listitem>
                  <para/>
                </listitem>
              </varlistentry>
              <varlistentry>
                <term>GLOBAL_LOGLIMIT</term>
                <listitem>
                  <para/>
                </listitem>
              </varlistentry>
              <varlistentry>
                <term>GLOBAL_BURSTLIMIT</term>
                <listitem>
                  <para/>
                </listitem>
              </varlistentry>
              <varlistentry>
                <term>GLOBAL_LOGLEVL</term>
                <listitem>
                  <para/>
                </listitem>
              </varlistentry>
              <varlistentry>
                <term>LOG_Stealth_XMAS</term>
                <listitem>
                  <para/>
                </listitem>
              </varlistentry>
              <varlistentry>
                <term>LOG_Stealth_XMAS_PSH</term>
                <listitem>
                  <para/>
                </listitem>
              </varlistentry>
              <varlistentry>
                <term>LOG_Stealth_XMAS_ALL</term>
                <listitem>
                  <para/>
                </listitem>
              </varlistentry>
              <varlistentry>
                <term>LOG_Stealth_FIN</term>
                <listitem>
                  <para/>
                </listitem>
              </varlistentry>
              <varlistentry>
                <term>LOG_Stealth_SYN_RST</term>
                <listitem>
                  <para/>
                </listitem>
              </varlistentry>
              <varlistentry>
                <term>LOG_Stealth_SYN_FIN</term>
                <listitem>
                  <para/>
                </listitem>
              </varlistentry>
              <varlistentry>
                <term>LOG_Stealth_Null</term>
                <listitem>
                  <para/>
                </listitem>
              </varlistentry>
              <varlistentry>
                <term/>
                <listitem>
                  <para/>
                </listitem>
              </varlistentry>
              <varlistentry>
                <term/>
                <listitem>
                  <para/>
                </listitem>
              </varlistentry>
              <varlistentry>
                <term/>
                <listitem>
                  <para/>
                </listitem>
              </varlistentry>
              <varlistentry>
                <term/>
                <listitem>
                  <para/>
                </listitem>
              </varlistentry>
              <varlistentry>
                <term/>
                <listitem>
                  <para/>
                </listitem>
              </varlistentry>
              <varlistentry>
                <term/>
                <listitem>
                  <para/>
                </listitem>
              </varlistentry>
            </variablelist>
          </para>
        </section>
        <section xml:id="conf_file_local_conf">
          <title>Local settings - configuration file (local.conf)</title>
          <para>This file is supposed to hold variable definitions, which only apply to the current
            working system. They may not be used on any other host.</para>
          <para>
            <variablelist>
              <varlistentry>
                <term><varname>LOCAL_BRANCH</varname></term>
                <listitem>
                  <para>Allowed values: Characters of calss [:word:] (alphanumeric and the `_'
                    (underline) character). </para>
                  <para>Purpose: Set name of the local VPN branch.</para>
                </listitem>
              </varlistentry>
              <varlistentry>
                <term><varname>LAN_NS</varname></term>
                <listitem>
                  <para>Purpose: Define name servers (DNS) that are part of a local area
                    network.</para>
                  <para>
                    <table frame="all">
                      <title>Local (LAN) name servers</title>
                      <tgroup cols="3" align="left" char="" conformance="">
                        <colspec colname="c1" colnum="1"/>
                        <colspec colname="c2" colnum="2"/>
                        <colspec colname="c3" colnum="3"/>
                        <thead>
                          <row>
                            <entry>Network name</entry>
                            <entry>Name server IP address</entry>
                            <entry>[Name server MAC address]</entry>
                          </row>
                        </thead>
                        <tbody>
                          <row>
                            <entry>DMZ</entry>
                            <entry>10.11.11.11</entry>
                            <entry>AA:BB:CC:DD:EE:FF</entry>
                          </row>
                          <row>
                            <entry>DMZ</entry>
                            <entry>10.11.11.12</entry>
                            <entry/>
                          </row>
                        </tbody>
                      </tgroup>
                    </table>
                  </para>
                </listitem>
              </varlistentry>
              <varlistentry>
                <term><varname>ISP_NS</varname></term>
                <listitem>
                  <para>Purpose: Define the Internet service provider name servers (DNS), for each
                    local area network.</para>
                  <para>
                    <table frame="all">
                      <title>ISP name servers</title>
                      <tgroup cols="3" align="left">
                        <colspec colname="c1" colnum="1"/>
                        <colspec colname="c2" colnum="2"/>
                        <colspec colname="newCol3" colnum="3"/>
                        <thead>
                          <row>
                            <entry>Network name</entry>
                            <entry>ISP name server IP address[,...]</entry>
                            <entry>[External network interface]</entry>
                          </row>
                        </thead>
                        <tbody>
                          <row>
                            <entry>PRODUCTION</entry>
                            <entry>123.12.12.22,123.12.12.23</entry>
                            <entry>eth1</entry>
                          </row>
                          <row>
                            <entry>DEVELOPMENT</entry>
                            <entry>124.13.13.23,124.13.13.24</entry>
                            <entry/>
                          </row>
                        </tbody>
                      </tgroup>
                    </table>
                  </para>
                </listitem>
              </varlistentry>
              <varlistentry>
                <term><varname>LOCAL_NS</varname></term>
                <listitem>
                  <para>Purpose: Define name servers (DNS) of the local system (most likely those
                    configured in <filename>/etc/resolv.conf</filename>.</para>
                  <para>
                    <table frame="all">
                      <title>Local name servers (resolv.conf)</title>
                      <tgroup cols="2" align="left">
                        <colspec colname="c1" colnum="1"/>
                        <colspec colname="c2" colnum="2"/>
                        <thead>
                          <row>
                            <entry>Name server IP address</entry>
                            <entry>[External network name]</entry>
                          </row>
                        </thead>
                        <tbody>
                          <row>
                            <entry>123.12.12.22,123.12.12.23</entry>
                            <entry>INET_CON_ISP_X</entry>
                          </row>
                          <row>
                            <entry>124.13.13.23,124.13.13.24</entry>
                            <entry/>
                          </row>
                        </tbody>
                      </tgroup>
                    </table>
                  </para>
                </listitem>
              </varlistentry>
              <varlistentry>
                <term><varname>ISP_SMTP</varname></term>
                <listitem>
                  <para>Purpose: Define the Internet service provider mail servers (SMTP), for each
                    local area network.</para>
                  <para>
                    <table frame="all">
                      <title>ISP SMTP servers</title>
                      <tgroup cols="3" align="left">
                        <colspec colname="c1" colnum="1"/>
                        <colspec colname="c2" colnum="2"/>
                        <colspec colname="c3" colnum="3"/>
                        <thead>
                          <row>
                            <entry>Network name</entry>
                            <entry>ISP mail server IP address[,...]</entry>
                            <entry>[External network name]</entry>
                          </row>
                        </thead>
                        <tbody>
                          <row>
                            <entry>PRODUCTION</entry>
                            <entry>123.12.12.90,123.12.12.91</entry>
                            <entry>INET_CON_ISP_X</entry>
                          </row>
                          <row>
                            <entry>DEVELOPMENT</entry>
                            <entry>125.25.25.5,125.25.25.6</entry>
                            <entry>INET_CON_ISP_Y</entry>
                          </row>
                          <row>
                            <entry>DMZ</entry>
                            <entry>126.26.26.6,128.28.28.8</entry>
                            <entry/>
                          </row>
                        </tbody>
                      </tgroup>
                    </table>
                  </para>
                </listitem>
              </varlistentry>
              <varlistentry>
                <term><varname>TIME_SERVERS</varname></term>
                <listitem>
                  <para>Purpose: Define time servers (NTP) of the local system.</para>
                  <para>
                    <table frame="all">
                      <title>Local NTP servers</title>
                      <tgroup cols="2" align="left">
                        <colspec colname="c1" colnum="1"/>
                        <colspec colname="c2" colnum="2"/>
                        <thead>
                          <row>
                            <entry>NTP server IP address[,...]</entry>
                            <entry>[External network name]</entry>
                          </row>
                        </thead>
                        <tbody>
                          <row>
                            <entry>11.12.13.14,12.13.14.15</entry>
                            <entry>INET_CON_ISP_X</entry>
                          </row>
                          <row>
                            <entry>99.99.99.9,99.99.99.10</entry>
                            <entry/>
                          </row>
                        </tbody>
                      </tgroup>
                    </table>
                  </para>
                </listitem>
              </varlistentry>
            </variablelist>
          </para>
        </section>
        <section xml:id="conf_file_global_conf">
          <title>Global settings - configuration file (global.conf)</title>
          <para>This file is supposed to hold global variable definitions (i.e. ports, network
            classes), which do not apply to the current working system only, but are of generic use,
            to be utilized on any or more than one host.</para>
        </section>
        <section xml:id="conf_file_ipsec_conf">
          <title>IPSEC configuration (vpn.conf)</title>
          <para>In this file the IPSEC (VPN) configuration is defined by the
              <varname>VPN_MAP</varname> variable, which holds the vpn branch data.</para>
          <para>If <varname>ENABLE_IPSEC</varname> is disabled, loading this file becomes
            obsolet.</para>
          <para>The VPN_MAP variable is structured as follows (example data provided):</para>
          <para>
            <table frame="all">
              <title>VPN_MAP structure</title>
              <tgroup cols="4" align="left">
                <colspec colname="c1" colnum="1"/>
                <colspec colname="c2" colnum="2"/>
                <colspec colname="c3" colnum="3"/>
                <colspec colname="c4" colnum="4"/>
                <thead>
                  <row>
                    <entry>Branch name</entry>
                    <entry>External IP address</entry>
                    <entry>LAN address/mask</entry>
                    <entry>LAN interface IP address</entry>
                  </row>
                </thead>
                <tbody>
                  <row>
                    <entry>local_branch</entry>
                    <entry>188.88.88.8</entry>
                    <entry>192.168.1.0/24</entry>
                    <entry>192.168.1.1</entry>
                  </row>
                  <row>
                    <entry>remote_branch_01</entry>
                    <entry>177.77.77.7</entry>
                    <entry>10.1.1.0/24</entry>
                    <entry>10.1.1.1</entry>
                  </row>
                  <row>
                    <entry>remote_branch_02</entry>
                    <entry>166.66.66.6</entry>
                    <entry>172.16.1.0/24</entry>
                    <entry>172.16.1.1</entry>
                  </row>
                </tbody>
              </tgroup>
            </table>
          </para>
        </section>
        <section xml:id="conf_file_alias_conf">
          <title>Custom variables/namings (alias.conf)</title>
          <para>This file is supposed to hold custom (user defined) variables. It is optional, but
            its use is recommended.</para>
          <para>Most likely the user will put definitions for interface names, hosts, etc. Those can
            be used in rules, ruleblocks and templates.</para>
        </section>
      </section>
      <section xml:id="config_files_xml">
        <title>XML</title>
        <subtitle>Description of the XML configuration files</subtitle>
        <para/>
        <section xml:id="conf_file_xml_def">
          <title>XML guidelines</title>
          <para/>
        </section>
        <section xml:id="conf_file_xml_templates">
          <title>XML templates</title>
          <para/>
        </section>
        <section xml:id="conf_file_xml_ruleblocks">
          <title>XML ruleblocks</title>
          <para/>
        </section>
        <section xml:id="conf_file_xml_rule_files">
          <title>XML rule files</title>
          <para/>
        </section>
      </section>
    </section>
    <section xml:id="conf_xml_templates_howto">
      <title>Templates</title>
      <subtitle>How to configure XML templates</subtitle>
      <para/>
      <section>
        <title>Syntax</title>
        <para/>
      </section>
      <section>
        <title>Template XML elements</title>
        <para/>
        <variablelist>
          <varlistentry>
            <term>ipt_table</term>
            <listitem>
              <para/>
            </listitem>
          </varlistentry>
          <varlistentry>
            <term>ipt_targets</term>
            <listitem>
              <para/>
            </listitem>
          </varlistentry>
          <varlistentry>
            <term>ipt_chains</term>
            <listitem>
              <para/>
            </listitem>
          </varlistentry>
          <varlistentry>
            <term>reverse_mode</term>
            <listitem>
              <para/>
            </listitem>
          </varlistentry>
          <varlistentry>
            <term>reverse_condition</term>
            <listitem>
              <para/>
            </listitem>
          </varlistentry>
          <varlistentry>
            <term>ruleblock_msg</term>
            <listitem>
              <para/>
            </listitem>
          </varlistentry>
          <varlistentry>
            <term>mandatory_vars</term>
            <listitem>
              <para/>
            </listitem>
          </varlistentry>
          <varlistentry>
            <term>load_template</term>
            <listitem>
              <para/>
            </listitem>
          </varlistentry>
          <varlistentry>
            <term>always_use_0</term>
            <listitem>
              <para/>
            </listitem>
          </varlistentry>
          <varlistentry>
            <term>always_use_1</term>
            <listitem>
              <para/>
            </listitem>
          </varlistentry>
          <varlistentry>
            <term>option_list_0</term>
            <listitem>
              <para/>
            </listitem>
          </varlistentry>
          <varlistentry>
            <term>option_list_1</term>
            <listitem>
              <para/>
            </listitem>
          </varlistentry>
          <varlistentry>
            <term>state_match_arg</term>
            <listitem>
              <para/>
            </listitem>
          </varlistentry>
        </variablelist>
        <section xml:id="option_lists">
          <title>Option lists</title>
          <para/>
        </section>
      </section>
      <section>
        <title>Template usage guidelines</title>
        <para/>
      </section>
    </section>
    <section xml:id="conf_xml_ruleblocks_howto">
      <title>Ruleblocks</title>
      <subtitle>How to configure XML ruleblocks</subtitle>
      <para/>
      <section>
        <title>Syntax</title>
        <para/>
      </section>
      <section>
        <title>Ruleblock XML elements</title>
        <para/>
      </section>
      <section>
        <title>Ruleblocks usage guidelines</title>
        <para/>
      </section>
    </section>
    <section xml:id="conf_xml_rule_files_howto">
      <title>Rule files</title>
      <subtitle>How to configure XML rule files</subtitle>
      <para/>
      <section>
        <title>Syntax</title>
        <para/>
      </section>
      <section>
        <title>Rule file XML elements</title>
        <para/>
      </section>
      <section xml:id="pub_funcs">
        <title>Public functions</title>
        <para>IP-Array allows the use of public functions inside rule files. They are defined using
          the <command>pub_func</command> XML tag.</para>
        <para>The list of available public functions can be retrieved by running: <command>ip-array
            show -sc public_functions</command>.</para>
        <para>Help about one or more of them can be retrieved by running i.e.: <command>ip-array
            show -sc public_functions:function_name_1,function_name_2</command>.</para>
        <para>Here is a list of the available functions including a brief description. For more
          details please refer to the individual help.</para>
        <variablelist>
          <varlistentry>
            <term>add_rule</term>
            <listitem>
              <para>Add (append) an iptables rule to the command queue (array). Can also be used as
                'inline' command.</para>
            </listitem>
          </varlistentry>
          <varlistentry>
            <term>log</term>
            <listitem>
              <para>IP-Array messaging (logging) to stdout/stderr and/or syslog.</para>
            </listitem>
          </varlistentry>
          <varlistentry>
            <term>create_chain</term>
            <listitem>
              <para>Create an iptables chain (add command to the command queue).</para>
            </listitem>
          </varlistentry>
          <varlistentry>
            <term>delete_chain</term>
            <listitem>
              <para>Delete an iptables chain (add command to the command queue).</para>
            </listitem>
          </varlistentry>
          <varlistentry>
            <term>set_proc</term>
            <listitem>
              <para>Set a configuration value in the `/proc' filesystem (add command to the command
                queue).</para>
            </listitem>
          </varlistentry>
          <varlistentry>
            <term>ipset_create</term>
            <listitem>
              <para>Create an ipset set.</para>
            </listitem>
          </varlistentry>
          <varlistentry>
            <term>ipset_add</term>
            <listitem>
              <para>Add an entry to an ipset set.</para>
            </listitem>
          </varlistentry>
          <varlistentry>
            <term>jump_tree_on</term>
            <listitem>
              <para>Enable classification into jump tree chains.</para>
            </listitem>
          </varlistentry>
          <varlistentry>
            <term>jump_tree_off</term>
            <listitem>
              <para>Disable classification into jump tree chains.</para>
            </listitem>
          </varlistentry>
          <varlistentry>
            <term>log_drop_scans</term>
            <listitem>
              <para>Globally LOG and/or DROP (nmap) scans. The following according configuration
                variables can be configured in the main configuration file:</para>
            </listitem>
          </varlistentry>
          <varlistentry>
            <term>log_invalid_state</term>
            <listitem>
              <para>Log packets in invalid state.</para>
            </listitem>
          </varlistentry>
          <varlistentry>
            <term>drop_invalid_state</term>
            <listitem>
              <para>Drop packets in invalid state.</para>
            </listitem>
          </varlistentry>
          <varlistentry>
            <term>logdrop_illegal_tcp</term>
            <listitem>
              <para>Log and/or drop non legal tcp packets.</para>
            </listitem>
          </varlistentry>
          <varlistentry>
            <term>drop_dhcp</term>
            <listitem>
              <para>Drop dhcp broadcasts on certain interfaces.</para>
            </listitem>
          </varlistentry>
          <varlistentry>
            <term>drop_netbios</term>
            <listitem>
              <para>Drop netbios broadcasts on certain interfaces</para>
            </listitem>
          </varlistentry>
          <varlistentry>
            <term>drop_upnp</term>
            <listitem>
              <para>Drop UPNP broadcasts on certain interfaces</para>
            </listitem>
          </varlistentry>
          <varlistentry>
            <term>reject_auth</term>
            <listitem>
              <para>Reject auth (tcp port 113) traffic.</para>
            </listitem>
          </varlistentry>
          <varlistentry>
            <term>anti_spoof</term>
            <listitem>
              <para>Create anti spoofing rules.</para>
            </listitem>
          </varlistentry>
          <varlistentry>
            <term>intns_to_extns</term>
            <listitem>
              <para>Allow internal DNS servers to communicate with ISP name servers.</para>
            </listitem>
          </varlistentry>
          <varlistentry>
            <term>lan_isp_smtp</term>
            <listitem>
              <para>Allow local networks to communicate with ISP SMTP servers.</para>
            </listitem>
          </varlistentry>
          <varlistentry>
            <term>lan_ftp</term>
            <listitem>
              <para>Allow passive and/or active ftp forwarding traffic from certain LANs.</para>
            </listitem>
          </varlistentry>
          <varlistentry>
            <term>enable_ipsec</term>
            <listitem>
              <para>Enable ipsec rules.</para>
            </listitem>
          </varlistentry>
          <varlistentry>
            <term>restrict_output</term>
            <listitem>
              <para>Settings to restrict traffic in OUTPUT chain.</para>
            </listitem>
          </varlistentry>
          <varlistentry>
            <term>mark_prio_syn</term>
            <listitem>
              <para>Prioritize SYN packets.</para>
            </listitem>
          </varlistentry>
          <varlistentry>
            <term>mark_out_bulk</term>
            <listitem>
              <para>Mark OUTPUT bulk traffic.</para>
            </listitem>
          </varlistentry>
          <varlistentry>
            <term>mark_fwd_bulk</term>
            <listitem>
              <para>Mark FORWARD bulk traffic.</para>
            </listitem>
          </varlistentry>
          <varlistentry>
            <term>nfacct_add</term>
            <listitem>
              <para>Add a nfacct accounting object.</para>
            </listitem>
          </varlistentry>
          <varlistentry>
            <term>set_var</term>
            <listitem>
              <para>Set a variables value.</para>
            </listitem>
          </varlistentry>
        </variablelist>
      </section>
      <section xml:id="inline_funcs">
        <title>inline functions</title>
        <para>Inline functions are used inside ruleblocks. Sometimes the structure of a ruleblock
          does not fit the current need. Using inline functions is a way around this, or allow to
          modify the behaviour of the rule processing.</para>
        <para>The following functions are available inline:</para>
        <para>
          <variablelist>
            <varlistentry>
              <term>add_rule</term>
              <listitem>
                <para xlink:href="#pub_funcs">See description of public_functions.</para>
              </listitem>
            </varlistentry>
            <varlistentry>
              <term>insert_ipt_rule</term>
              <listitem>
                <para>Like `add_rule' but it will insert the rule on top of the stack.</para>
              </listitem>
            </varlistentry>
            <varlistentry>
              <term>create_chain</term>
              <listitem>
                <para xlink:href="#pub_funcs">See description of public_functions.</para>
              </listitem>
            </varlistentry>
          </variablelist>
        </para>
      </section>
      <section>
        <title>Rulefile usage guidelines</title>
        <para/>
      </section>
    </section>
  </chapter>
  <chapter xml:id="usage">
    <title>Usage</title>
    <subtitle>Running IP-Array</subtitle>
    <para/>
    <section xml:id="startup_params">
      <title>Startup parameters and options</title>
      <para/>
      <section xml:id="usage_params">
        <title>Parameters</title>
        <para>These parameters control the 'mode' IP-Array runs on.</para>
        <itemizedlist>
          <listitem>
            <para>start</para>
            <para>All network connections are forbidden (see lockdown mode below) until all
              configuration has been read. Module probing (if configured) is done first. After all
              commands are compiled, they are applied at once. An iptables rule listing is saved for
              later difference checks.</para>
          </listitem>
          <listitem>
            <para>stop</para>
            <para>All tables and chains get flushed, no firewalling is active any more. All tc qdisc
              are removed, no traffic shaping is active any more. Modules configured to be loaded
              are removed.</para>
          </listitem>
          <listitem>
            <para>restart</para>
            <para>Module probing (if configured) is done first. After all commands are compiled,
              they are applied at once. An iptables rule listing is saved for later difference
              checks.</para>
          </listitem>
          <listitem>
            <para>test</para>
            <para>Acts like the 'restart', but will use the testing configuration below the 'test'
              folder. Also it will schedule a restore job (using the `at' command scheduler) for the
              time specified with <varname>RELOAD_TIME</varname> in the <link
                xlink:href="#conf_file_defaults">defaults</link> file.</para>
          </listitem>
          <listitem>
            <para>open</para>
            <para>Module probing (if configured) is done first.This mode leaves only the NAT rules
              active (reads configuration and re-applies them), all other tables are emptied.
              Policies are set to ACCEPT. An iptables rule listing is saved for later difference
              checks.</para>
          </listitem>
          <listitem>
            <para>tc-start</para>
            <para>Start traffic shaping only. Mangle table rules will be (re)-applied. An iptables
              rule listing is saved for later difference checks.</para>
          </listitem>
          <listitem>
            <para>tc-stop</para>
            <para>Stop traffic shaping only. Mangle table rules will be (re)-applied. Qdisks of
              interfaces listed in <varname>NET_INTERFACES</varname> will be deleted. An iptables
              rule listing is saved for later difference checks.</para>
          </listitem>
          <listitem>
            <para>lockdown</para>
            <para>All filter table policies will be set to DROP, all others will be set to ACCEPT.
              All chains get flushed and custom chains are deleted. No more network connections are
              allowed except:<simplelist>
                <member>A: If the bash environment variable SSH_CONNECTION is set, IP-Array allow
                  connections from that source address to the ssh server port.</member>
                <member>B: If the environment variable is not set, but the ADMIN_CONNECTION variable
                  is set in the main config file, IP-Array will allow the configured
                  connection.</member>
                <member>C: If the ALLOW_LOOPBACK variable is set in the main config file, loopback
                  communication will be allowed.</member>
              </simplelist></para>
          </listitem>
          <listitem>
            <para>diff-last-activated</para>
            <para>Every time IP-Array is not in 'test' mode and activates an iptables ruleset, it
              saves a listing of the rules to a file. Using this parameter a (simple
                <filename>diff</filename> based) difference check between the currently active
              ruleset and the listing of the file is performed. Thus allowing to detect (unwanted)
              modifications.</para>
          </listitem>
          <listitem>
            <para>dry-run</para>
            <para>Configuration is processed and validated, but no commands will be applied. </para>
          </listitem>
          <listitem>
            <para>save</para>
            <para>The currently active iptables and ipset ruleset will be saved using
              `iptables-save' and `ipset save'.</para>
          </listitem>
          <listitem>
            <para>save-known-good</para>
            <para>Save the currently active ruleset to file (the name of the file can be set using
              the variable <varname>KNOWN_GOOD_RULESET</varname> in the <link
                xlink:href="#conf_file_defaults">defaults</link> file. It will be used if
                <varname>RESTORE_ON_START</varname> is set to `1' (quick start activated).</para>
          </listitem>
          <listitem>
            <para>restore</para>
            <para>The previously saved ruleset (using the 'save' parameter) will be restored using
              `iptables-restore' `ipset restore'.</para>
          </listitem>
          <listitem>
            <para>save-commands</para>
            <para>Save all commands (modprobe, proc, tc, iptables, ipset) to a file.</para>
          </listitem>
          <listitem>
            <para>save-iptables-commands</para>
            <para>Save the generated iptables and ipset commands to a file.</para>
          </listitem>
          <listitem>
            <para>save-modprobe-commands</para>
            <para>Save the generated modprobe commands to a file.</para>
          </listitem>
          <listitem>
            <para>save-proc-commands</para>
            <para>Save the generated /proc commands to a file.</para>
          </listitem>
          <listitem>
            <para>save-tc-commands</para>
            <para>Save the generated tc commands to file.</para>
          </listitem>
          <listitem>
            <para>save-shaping-commands</para>
            <para>Save the generated tc and iptables mangle table (mark) commands to file.</para>
          </listitem>
          <listitem>
            <para>prepare-restore-on-start</para>
            <para>Create the '<emphasis role="bold">quick start</emphasis>' scripts. After the
              configuration is completed this parameter allows to save it into scripts holding the
              compiled commands, in order to quickly (re)apply it to the system. If iptables-save is
              used (<varname>IPTSAVE_FAILS</varname> is set to `0') the currently active ruleset
              will be saved. The name for these 'known-good' script can be set in the <link
                xlink:href="#conf_file_defaults">defaults</link> file.</para>
          </listitem>
          <listitem>
            <para>parse-xml</para>
            <para>Compile bash scripts from the XML files. By default templates, ruleblocks and
              rules are converted. The -pb, -pr and -pt parameters allow to select which of those
              will be compiled.</para>
          </listitem>
          <listitem>
            <para>compat-check</para>
            <para>A compatibility check will be performed. IP-Array will probe the kernel version,
              supported iptables tables, targets and matches, available proc settings, modules and
              programs. The result will be printed to stdout.</para>
          </listitem>
          <listitem>
            <para>show</para>
            <para>Show configuration or colour settings. The option `-sc' selects the type of
              information to display. By default the settings of the main configuration file are
              shown.</para>
          </listitem>
          <listitem>
            <para>version</para>
            <para>Show version information.</para>
          </listitem>
          <listitem>
            <para>help, -h, --help, -?</para>
            <para>Show usage information.</para>
            <para>If `--public-functions' is used as second argument, a list of available public
              functions is printed. If a name of public function is given as third argument, a brief
              description of the function is shown.</para>
          </listitem>
        </itemizedlist>
      </section>
      <section xml:id="usage_options">
        <title>Options</title>
        <para>Options with no further argument are listed first.</para>
        <itemizedlist>
          <listitem>
            <para>-ct, --ipt-counters</para>
            <para>Save or restore iptables counters when using the `save' or `restore' startup
              parameter.</para>
          </listitem>
          <listitem>
            <para>-dg, --debug</para>
            <para>Enable debugging output.</para>
          </listitem>
          <listitem>
            <para>-dr, --dry-run</para>
            <para>Commands will not be applied.</para>
          </listitem>
          <listitem>
            <para>-ex, --err-exit</para>
            <para>Set bash to exit onsimple command failure (set -e) and to inherit the ER trap to
              functions, etc.</para>
          </listitem>
          <listitem>
            <para>-na, --no-autosave</para>
            <para>Do not use the automatic saving and restoring logic (see <link
                xlink:href="#autosave">autosave / restore</link>).</para>
          </listitem>
          <listitem>
            <para>-nc, --no-compat-check</para>
            <para>Do not perform the compatibility check. </para>
          </listitem>
          <listitem>
            <para>-nd, --no-diff</para>
            <para>Do not save the diff file for the difference check of the ruleset
              (diff-last-activated startup parameter).</para>
          </listitem>
          <listitem>
            <para>-ni, --no-iface-check</para>
            <para>Do not check for the existence of interfaces.</para>
          </listitem>
          <listitem>
            <para>-nm, --no-modprobe</para>
            <para>Do not perform load or unload kernel modules.</para>
          </listitem>
          <listitem>
            <para>-np, --no-proc</para>
            <para>Do not set the /proc filesystem configuration.</para>
          </listitem>
          <listitem>
            <para>-p, --parse-xml</para>
            <para>Read all XML files and overwrite already compiled bash scripts.</para>
          </listitem>
          <listitem>
            <para>-pb, --parse-ruleblocks</para>
            <para>Read XML ruleblock files and overwrite already compiled bash scripts.</para>
          </listitem>
          <listitem>
            <para>-pr, --parse-rulefiles</para>
            <para>Read XML rule files and overwrite already compiled bash scripts.</para>
          </listitem>
          <listitem>
            <para>-pt, --parse-templates</para>
            <para>Read XML template files and overwrite already compiled bash scripts.</para>
          </listitem>
          <listitem>
            <para>-t, --test</para>
            <para>Schedule the restore of the active ruleset..</para>
          </listitem>
          <listitem>
            <para>-b, --base-dir directory</para>
            <para>Set base directory to use (i.e. /etc/ip-array).</para>
          </listitem>
          <listitem>
            <para>-c, --config-file file</para>
            <para>Specify the name of the <link xlink:href="#conf_file_main_conf">main configuration
                file</link> to use.</para>
          </listitem>
          <listitem>
            <para>-C, --config-dir directory</para>
            <para>Set directory for the <link xlink:href="#conf_file_main_conf">main configuration
                file</link>.</para>
          </listitem>
          <listitem>
            <para>-d, --defaults-file full_path_to_file</para>
            <para>Specify the full path of the <link xlink:href="#conf_file_defaults"
                >defaults</link> file to use.</para>
          </listitem>
          <listitem>
            <para>-e, --exe-dir directory</para>
            <para>Set the directory to place the main executable of IP-Array into (i.e.
              /usr/bin/ip-array).</para>
          </listitem>
          <listitem>
            <para>-l, --lib-dir directory</para>
            <para>Set the directory to place the function file(s) of IP-Array into (i.e.
              /usr/lib/ip-array).</para>
          </listitem>
          <listitem>
            <para>-r, --run-dir directory</para>
            <para>Set the directory to place the PID file into (i.e. /var/run).</para>
          </listitem>
          <listitem>
            <para>-s, --save-file file</para>
            <para>Specify the name of the file used to save or restore a ruleset.</para>
          </listitem>
          <listitem>
            <para>-si, --save-ips-file file</para>
            <para>Specify the name of the file used to save or restore an ipset ruleset.</para>
          </listitem>
          <listitem>
            <para>-co, --color 0 | 1</para>
            <para>Enable or disable coloured output.</para>
          </listitem>
          <listitem>
            <para>-gf, --gen-format type</para>
            <para>Generate command in iptables-save format, or as command list. Available types:
              `cmd' (= default) or `ipt'</para>
          </listitem>
          <listitem>
            <para>-rs, --restore-on-start 0 | 1</para>
            <para>Enable or disabe quickstart (only valid using the `start' parameter).</para>
          </listitem>
          <listitem>
            <para>-rt, --reload-time 1-15</para>
            <para>Time in minutes until the saved ruleset will be restored.</para>
          </listitem>
          <listitem>
            <para>-sc, --show-config [type]</para>
            <para>Select type of information to show. If type is omitted, the settings of the <link
                xlink:href="#conf_file_main_conf">main configuration file</link> will be
              displayed.</para>
            <para>Available types are: <simplelist>
                <member> all (everything will be displayed)</member>
                <member> ansi_codes (display ANSI codes for coloured shell output)</member>
                <member> colors (available colours)</member>
                <member> defaults[:NAME[,...] display all or just the selected variable names from
                  the <link xlink:href="#conf_file_defaults">defaults</link> file.</member>
                <member> main[:NAME[,...] display all or just the selected variable names from the
                    <link xlink:href="#conf_file_main_conf">main configuration file</link>
                  file.</member>
                <member> targets (show all available iptables targets).</member>
                <member> matches (show all available iptables matches).</member>
                <member> rules (show the compiled iptables rules).</member>
                <member> ipt_args[:NAME[,...] display all or just the selected iptables arguments
                  help.</member>
                <member> ruleblocks[:NAME[,...] display all or just the selected ruleblock
                  names.</member>
                <member> templates[:NAME[,...] display all or just the selected templates
                  names.</member>
                <member> public_functions[:NAME[,...] display all or just the selected public
                  functions help.</member>
              </simplelist></para>
          </listitem>
          <listitem>
            <para>-sh, --shell /path/shell</para>
            <para>Specify an alternative shell to run IP-Array.</para>
          </listitem>
          <listitem>
            <para>-sv, --syslog-verbose 0-6</para>
            <para>Specify the level of output verbosity to syslog. Allowed values are from `0' to
              `6'. Overrides the value of <varname>SYSLOG_VERBOSE</varname> in the <link
                xlink:href="#conf_file_defaults">defaults</link> file.</para>
          </listitem>
          <listitem>
            <para>-v, --verbose 0-9</para>
            <para>Specify the level of output verbosity. Allowed values are from `0' to `9'.
              Overrides the value of <varname>VERBOSE</varname> in the <link
                xlink:href="#conf_file_defaults">defaults</link> file.</para>
          </listitem>
        </itemizedlist>
      </section>
    </section>
    <section xml:id="startup_usage_examples">
      <title>Usage examples</title>
      <para>
        <variablelist>
          <varlistentry>
            <term>/etc/init.d/ip-array dry-run -v 6 -sv 0 -pb</term>
            <listitem>
              <para>Run IP-Array in no-acting mode (don't apply commands). With a verbosity to
                screen of `6' (quite detailed) and a syslog verbosity of `0'. Also parse the XML
                ruleblock files and compile bash scripts out of them.</para>
            </listitem>
          </varlistentry>
          <varlistentry>
            <term>/etc/init.d/ip-array parse-xml -sv 0</term>
            <listitem>
              <para>Just parse all XML files. Use the default screen verbosity and set syslog
                verbosity to `0'.</para>
            </listitem>
          </varlistentry>
          <varlistentry>
            <term>/etc/init.d/ip-array restart -p -na</term>
            <listitem>
              <para>Parse the XML files before reloading the configuration. Do not use the autosave
                / restore logic.</para>
            </listitem>
          </varlistentry>
          <varlistentry>
            <term>/etc/init.d/ip-array save -s home_net_config.ipt_save</term>
            <listitem>
              <para>Save the currently active iptables ruleset using iptables-save to the file
                specified as 'home_net_config.ipt_save.</para>
            </listitem>
          </varlistentry>
          <varlistentry>
            <term>/etc/init.d/ip-array test -d "/etc/default/ip-array/defaults_02.conf" -c
              "xyz_test_02.conf" -sv 4 -v 0 -pb -pr</term>
            <listitem>
              <para>Run IP-Array in 'test' mode. Use the defaults config file specified with
                '/etc/default/ip-array/defaults_02.conf'. Use the main configuration file specified
                with: 'xyz_test_02.conf'. Set syslog verbosity to `4'. Set screen output verbosity
                to `0'. Parse ruleblock and rule files.</para>
            </listitem>
          </varlistentry>
          <varlistentry>
            <term>/etc/init.d/ip-array prepare-restore-on-start -v 1 -sv 0</term>
            <listitem>
              <para>Prepare the 'quick-start' scripts with a screen verbosity of `1' and syslog
                verbosity of `0'.</para>
            </listitem>
          </varlistentry>
        </variablelist>
      </para>
    </section>
  </chapter>
  <chapter xml:id="examples">
    <title>Examples</title>
    <subtitle>Example scenarios</subtitle>
    <para/>
    <section xml:id="example_single_host">
      <title>Single host example</title>
      <para/>
    </section>
    <section xml:id="example_lan_gatew">
      <title>LAN gateway example</title>
      <para/>
    </section>
    <section xml:id="example_multi_home">
      <title>Multi-homed example</title>
      <para/>
    </section>
  </chapter>
  <chapter xml:id="faq"><title>FAQ</title><subtitle>Frequently Asked Questions</subtitle><qandaset>
      <qandadiv>
        <qandaentry>
          <question>
            <para>Why the name 'IP-Array'?</para>
          </question>
          <answer>
            <para>IP-Array functionality is built around utilizing 'arrays', hence the name.</para>
          </answer>
        </qandaentry>
        <qandaentry>
          <question>
            <para>Why a bash script?</para>
          </question>
          <answer>
            <itemizedlist>
              <listitem>
                <para>I wanted to learn bash. Usually I choose myself a project and then learn while
                  developing - same here.</para>
              </listitem>
              <listitem>
                <para>Bash should be installed on every common linux distribution, hence no need for
                  any additional packages.</para>
              </listitem>
              <listitem>
                <para>You could say 'there are already a lot of iptables frontends available': Well,
                  actually there are a couple of public bash firewall scripts available. Lots of
                  them are quite unmaintained, or did not quite do what i wanted. Of course there
                  are also accurate and good scripts around, so it's up to the user to decide. Also
                  if you don't want to use any external program for whatever reason, IP-Array might
                  become useful.</para>
              </listitem>
            </itemizedlist>
          </answer>
        </qandaentry>
      </qandadiv>
    </qandaset>
  </chapter>
  <chapter xml:id="appendix">
    <title>Appendix</title>
    <para/>
    <section xml:id="support_info">
      <title>Support</title>
      <para>The preferred way to get support on IP-Array, is to open a forum post on the project
        page. Alternatively you could send a mail to <email>AllKind@fastest.cc</email>.</para>
    </section>
    <section xml:id="bug_report">
      <title>Bug report</title>
      <para>Please report bugs either via a forum post on the project homepage, or send email to
          <email>AllKind@fastest.cc</email>.</para>
    </section>
    <section xml:id="co-develop">
      <title>Co-Development</title>
      <para>If you like IP-Array and want to help developing, send email to
          <email>AllKind@fastest.cc</email>.</para>
    </section>
  </chapter>
</book>
