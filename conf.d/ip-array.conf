#!/usr/bin/env bash

#-------------------------------------------------------------------------------
# IP-ARRAY MAIN CONFIGURATION FILE
#-------------------------------------------------------------------------------

#---------------------------------------
# CONFIGURATION FILES
#---------------------------------------

# List of configuration files to load.
# This is the only variable that must be in this file. All other can be
# outsourced to different files, as long as their names are put here.
CONFIG_FILES="aliases.conf global.conf"

# Names of the base template files
#BASE_TEMPLATES="base_templates.xml global_templates.xml"

#---------------------------------------
# INTERFACES
#---------------------------------------

# Loopback Interface - defaults to `lo' if unset
#LOOPBACK_IF="lo"

# List of all network interfaces (not lo)
# newline separates entries
# Format: iface-name | iface-alias | ext/local/ipsec | network-name
NET_INTERFACES="
"

#---------------------------------------
# FILTER table
#---------------------------------------

# Disable / Enable filter table rules | Format: 0/1
ENABLE_FILTER=0

# FILTER rules file
#IPT_FILTER_TEMPLATES="filter_base_templates.xml filter_ipsec_templates.xml filter_templates.xml"
#FILTER_RULEBLOCKS="filter_ruleblocks.xml filter_ipsec_ruleblocks.xml"
#FILTER_RULES="filter_rules.xml"

#---------------------------------------
# MANGLE table
#---------------------------------------

# Disable / Enable mangle table rules | Format: 0/1
ENABLE_MANGLE=0

# MANGLE rules file
#IPT_MANGLE_TEMPLATES="mangle_base_templates.xml mangle_templates.xml tc_mangle_templates.xml"
#MANGLE_RULEBLOCKS="mangle_ruleblocks.xml"
#MANGLE_RULES="mangle_rules.xml"

#---------------------------------------
# NAT table
#---------------------------------------

# Disable / Enable nat table rules | Format: 0/1
ENABLE_NAT=0

# NAT rules file
#IPT_NAT_TEMPLATES="nat_base_templates.xml nat_templates.xml"
#NAT_RULEBLOCKS="nat_ruleblocks.xml"
#NAT_RULES="nat_rules.xml"

#---------------------------------------
# RAW table
#---------------------------------------

# Disable / Enable raw table rules | Format: 0/1
ENABLE_RAW=0

# RAW rules file
#IPT_RAW_TEMPLATES="raw_base_templates.xml raw_templates.xml"
#RAW_RULEBLOCKS="raw_ruleblocks.xml"
#RAW_RULES="raw_rules.xml"

#---------------------------------------
# RAWPOST table
#---------------------------------------

# Disable / Enable rawpost table rules | Format: 0/1
#ENABLE_RAWPOST=0

# RAWPOST rules file
#IPT_RAWPOST_TEMPLATES="rawpost_base_templates.xml rawpost_templates.xml"
#RAWPOST_RULEBLOCKS="rawpost_ruleblocks.xml"
#RAWPOST_RULES="rawpost_rules.xml"

#---------------------------------------
# SECURITY table
#---------------------------------------

# Disable / Enable security table rules | Format: 0/1
ENABLE_SECURITY=0

# SECURITY rules file
#IPT_SECURITY_TEMPLATES="security_base_templates.xml security_templates.xml"
#SECURITY_RULEBLOCKS="security_ruleblocks.xml"
#SECURITY_RULES="security_rules.xml"

#---------------------------------------
# IPSET
#---------------------------------------

# table independent ipset rules
#IPSET_RULES="ipset_rules.xml"

#---------------------------------------
# KERNEL MODULES
#---------------------------------------

# Modules directory
#MODULE_DIR="/lib/modules/$("$UNAME" -r)"

# Modules to load
# Format (IFS=newline): module-name [parameters]
MODULES_TO_LOAD='
'

# Modules to remove
# newline separates entries
MODS_TO_RM='
'

#---------------------------------------
# PROLOG and EPILOG scripts
#---------------------------------------

# Format:
# startup-parameter[,...] {prolog|epilog} script-name {prolog|epilog} script-name
# newline separates entries
# i.e. start,stop prolog my_prolog_script epilog my_epilog_script
SCRIPT_MAP="
"

#---------------------------------------
# GLOBAL POLICY MAP
#---------------------------------------

# Format: table chain policy
# newline separates entries
POLICY_MAP="
#filter INPUT DROP
#filter OUTPUT DROP
#filter FORWARD DROP
#nat OUTPUT ACCEPT
#nat PREROUTING ACCEPT
#nat POSTROUTING ACCEPT
#mangle INPUT ACCEPT
#mangle OUTPUT ACCEPT
#mangle FORWARD ACCEPT
#mangle PREROUTING ACCEPT
#mangle POSTROUTING ACCEPT
#raw PREROUTING ACCEPT
#raw OUTPUT ACCEPT
##rawpost POSTROUTING ACCEPT
#security INPUT ACCEPT
#security OUTPUT ACCEPT
#security FORWARD ACCEPT
"

#---------------------------------------
# LOOPBACK
#---------------------------------------

# Allow loopback communiction (packets leaving/entering the loopback interface)
# Format: 0/1
ALLOW_LOOPBACK=1


#---------------------------------------
# Administrator remote connection
#---------------------------------------

# Format: admin_source-address local_destination-address local_destination-port
ADMIN_CONNECTION=""


#---------------------------------------
# CHAINS
#---------------------------------------

# Chains to create
# Format: table chain-name [...]
# newline separates entries
CHAIN_MAP="
"

# Automated jump tree creation
# Format: { none | interface | netname | netname+interface } { table [...] | all }
JUMP_TREE="none"

# Should all the jump tree chains be created automatically, or when needed?
JUMP_TREE_CHAINS_CREATE_ALL=0

# After applying the ruleset should empty chains be removed?
# Format: 0/1
REMOVE_EMPTY_CHAINS=0

# After applying the ruleset should unreferenced chains be removed?
# Format: 0/1
REMOVE_UNREF_CHAINS=0

#---------------------------------------
# KNOWN RETURN TRAFFIC (STATE)
#---------------------------------------

# chain | state: [E,R,ER] default: ER | [top,bottom] default: top
# newline separates entries
# E = ESTABLISHED, R = RELATED
# i.e.
# INPUT E
# INPUT R bottom
KNOWN_TRAFFIC_MAP="
"

# When templates with reverse traffic definitions are in use
# should the reverse (return) rules be generated.
# Format: 0/1
REVERSE_INPUT_RULES_REQUIRED=0
REVERSE_FOWARD_RULES_REQUIRED=0

#---------------------------------------
# CHAIN TERMINATION - FINAL RULE
#---------------------------------------

# chain | action: (log|drop|reject|logdrop|logreject) | [ limit ] | [ burst ] | [ log-level ] | [ log-options ]
# default limit is: $GLOBAL_LOGLIMIT
# default burst is: $GLOBAL_BURSTLIMIT
# newline separates entries
FINAL_RULE_MAP="
"

#---------------------------------------
# INVALID / ILLEGAL / FRAGMENTED  PACKETS
#---------------------------------------

# Log packets in invalid state | Format: 0/1
# Requires the public function `log_drop_invalid_state' in the rule file
LOG_INVALID=0

# Drop packets in invalid state | Format: 0/1
# Requires the public function `log_drop_invalid_state' in the rule file
BLOCK_INVALID=0

# Log illegal packets | Format: 0/1
# Requires the public function `log_drop_illegal_tcp' in the rule file
LOG_ILLEGAL=0

# Drop illegal packets | Format: 0/1
# Requires the public function `log_drop_illegal_tcp' in the rule file
BLOCK_ILLEGAL=0

#---------------------------------------
# LOCAL NETWORK MAPS
#---------------------------------------

# Select LAN interfaces from where FTP is permitted
# Requires the public function `lan_ftp' in the rule file
# Format: lan-interface|netname[:external-interface|netname][:active|passive|all|none] [...]
# ftp mode defaults to `all'.
# (i.e. "eth1:eth0:active DMZ:PUBLIC eth3::passive")
LAN_FTP=""

# Automatically configure LAN nameserver to IPS nameserver(s) rules
# Requires the public function `intns_to_extns' in the rule file
# Internet Service Provider nameservers
# Format: subnet-name | nameserver-ip-address[,...] | [ external-net-name ]
ISP_NS="
"

# LAN nameservers
# Format: subnet-name | nameserver-IP | [ nameserver-MAC-addr ]
LAN_NS="
"

# Internet Service Provider SMTP servers
# Requires the public function `lan_isp_smtp' in the rule file
# Format: subnet-name | ip-address[,...] | [ external-net-name ]
ISP_SMTP="
"

#---------------------------------------
# OUTPUT CHAIN HANDLING
#---------------------------------------
# Requires the public function `restrict_output' in the rule file

# Restrict or open OUTPUT chain | Format: 0 / 1 / IFBOUND / IPBOUND
RESTRICT_OUTPUT="0"

# If RESTRICT_OUTPUT is '1' and the policy of the OUTPUT chain is DROP,
# allow output (external interface) to nameservers from 'LOCAL_NS' (use /etc/resolv.conf entries)
# Format: 0/1
REST_OUT_DNS_ALLOW=0

# Local nameservers (on the firewall itself)
# used to allow dns traffic if OUTPUT chain is restricted 'RESTRICT_OUTPUT=1'
# Format: auto (read from /etc/resolv.conf) or:
# nameserver ip-address[,...] | [ external-net-name ]
# newline separates entries
LOCAL_NS="
"

# If RESTRICT_OUTPUT is '1' and the policy of the OUTPUT chain is DROP,
# allow all OUTPUT (external interface) to TIMESERVERS from variable 'NTP_SERVERS'
# Format: 0/1
REST_OUT_NTP_ALLOW=0

# Timeservers
# used to allow ntp traffic if OUTPUT chain is restricted 'RESTRICT_OUTPUT=1'
# Format: auto (read from /etc/ntp.conf !only IP addresses are valid!) or:
# Format: timeserver-ip-address[,...] | [ external-net-name ]
# newline separates entries
TIME_SERVERS="
"

# If RESTRICT_OUTPUT is '1', allow all OUTPUT to LAN(s) attached to certain interfaces
# Format: lan-interface [...]
REST_OUT_LAN_ALLOW=""

# If RESTRICT_OUTPUT is IFBOUND or IPBOUND, allow only ESTABLISHED (0), or ESTABLISHED and RELATED (1) traffic
# Format: 0/1
REST_ALLOW_RELATED=0

#---------------------------------------
# DROP / REJECT SETTINGS
#---------------------------------------

# Block DHCP broadcasts to listed interfaces (keep from spamming logs)
# Requires the public function `drop_dhcp' in the rule file
# Format: interface [...]
DROP_DHCP=""

# Block (Microsoft) UPNP broadcasts to listed interfaces (keep from spamming logs)
# Requires the public function `drop_upnp' in the rule file
# Format: interface [...]
DROP_UPNP=""

#---------------------------------------
# LOGGING
#---------------------------------------

# Log prefix
LOG_PREFIX="IPT_"

# Global Log Limit
GLOBAL_LOGLIMIT="1/s"

# Global Burst Limit
GLOBAL_BURSTLIMIT=3

# Global Log Level
GLOBAL_LOGLEVL="INFO"

#---------------------------------------
# VPN
#---------------------------------------
# Requires the public function `enable_ipsec' in the rule file

# Disable / Enable IPSEC rules | Format: 0/1
ENABLE_IPSEC=0

# Allow all branch to branch traffic | Format: 0/1
ALLOW_ALL_BRANCH=0

# IPSEC rules file
#IPSEC_RULES="ipsec_rules.xml"

# Local VPN Branch name
LOCAL_BRANCH=""

# VPN MAP
# Format: name | external IP | LAN range | LAN iface IP
# newline separates entries
VPN_MAP="
"

#---------------------------------------
# TRAFFIC SHAPING
#---------------------------------------

# Disable / Enable traffic shaping | Format: 0/1
ENABLE_TC_SHAPING=0

# Packet marking rules for traffic shaping
#TC_RULEBLOCKS="tc_ruleblocks.xml"
#TC_MANGLE_RULEBLOCKS="tc_mangle_ruleblocks.xml"
#TC_MARK_RULES="tc_mark_rules.xml"

# Priorize SYN packets
# Requires the public function `mark_prio_syn' in the rule file
# Format: output-device:mark [...] (i.e. eth0:1 eth1:2)
PRIORITIZE_SYN=""

# Output Bulk Mark
# Requires the public function `mark_out_bulk' in the rule file
# Format: device:mark [...] (i.e. eth0:6)
OUTPUT_BULK=""

# Forward Bulk Mark
# Requires the public function `mark_fwd_bulk' in the rule file
# Format: input-device,output-device:mark [...] (i.e. eth1,eth0:6)
FORWARD_BULK=""

#---------------------------------------
# MISC SETTINGS
#---------------------------------------

# Exit on configuration and command apply errors
EXIT_ON_ERROR=1

# Rule placeholder character.
# Used as a placeholder for unused values in the rule configuration file.
# Valid values are: `_' `-' `.' `,' (defaults to `_')
#RULE_PLACEHOLDER='_'

# Always use the conntrack match extension instead of the state match
# Format: 0/1
USE_M_CONNTRACK=0

# nfacct map - Netfilter accounting objects
# Format: name ...
NFACCT_OBJ_MAP="
"

#---------------------------------------
# SYSCTL SETTINGS
#---------------------------------------

# sysctl rule files that should be placed into sysctl.d
#SYSCTL_RULES="sysctl_rules.xml"

# Set maximum number of connections to track
# You can set this manually in you sysctl rules, but this is here as we can do automatic calculation.
# Format: value (i.e. 8192) | [xX]factor (i.e. x2 to calculate the value automatically and multiply it with 2)
#SYSCTL_CONNTRACK_MAX=x2

