#!/bin/bash

#-------------------------------------------------------------------------------
# IP-ARRAY MAIN CONFIGURATION FILE
#-------------------------------------------------------------------------------

#---------------------------------------
# CONFIGURATION FILES
#---------------------------------------

# List of configuration files to load.
# This is the only variable that must be in this file. All other can be
# outsourced to different files, as long as their names are put here.
CONFIG_FILES="aliases.conf global.conf"

# Names of the base template files
BASE_TEMPLATES="base_templates.xml global_templates.xml"

#---------------------------------------
# FILTER table
#---------------------------------------

# Disable / Enable filter table rules | Format: 0/1
ENABLE_FILTER=0

# FILTER rules file
IPT_FILTER_TEMPLATES="filter_base_templates.xml filter_ipsec_templates.xml filter_templates.xml"
FILTER_RULEBLOCKS="filter_ruleblocks.xml filter_ipsec_ruleblocks.xml"
FILTER_RULES="filter_rules.xml"

#---------------------------------------
# MANGLE table
#---------------------------------------

# Disable / Enable mangle table rules | Format: 0/1
ENABLE_MANGLE=0

# MANGLE rules file
IPT_MANGLE_TEMPLATES="mangle_base_templates.xml mangle_templates.xml"
MANGLE_RULEBLOCKS="mangle_ruleblocks.xml"
MANGLE_RULES="mangle_rules.xml"

#---------------------------------------
# NAT table
#---------------------------------------

# Disable / Enable nat table rules | Format: 0/1
ENABLE_NAT=0

# NAT rules file
IPT_NAT_TEMPLATES="nat_base_templates.xml nat_templates.xml"
NAT_RULEBLOCKS="nat_ruleblocks.xml"
NAT_RULES="nat_rules.xml"

#---------------------------------------
# RAW table
#---------------------------------------

# Disable / Enable raw table rules | Format: 0/1
ENABLE_RAW=0

# RAW rules file
IPT_RAW_TEMPLATES="raw_base_templates.xml raw_templates.xml"
RAW_RULEBLOCKS="raw_ruleblocks.xml"
RAW_RULES="raw_rules.xml"

#---------------------------------------
# RAWPOST table
#---------------------------------------

# Disable / Enable rawpost table rules | Format: 0/1
#ENABLE_RAWPOST=0

# RAWPOST rules file
#IPT_RAWPOST_TEMPLATES="rawpost_base_templates.xml rawpost_templates.xml"
#RAWPOST_RULEBLOCKS="rawpost_ruleblocks.xml"
#RAWPOST_RULES="rawpost_rules.xml"

#---------------------------------------
# SECURITY table
#---------------------------------------

# Disable / Enable security table rules | Format: 0/1
ENABLE_SECURITY=0

# SECURITY rules file
IPT_SECURITY_TEMPLATES="security_base_templates.xml security_templates.xml"
SECURITY_RULEBLOCKS="security_ruleblocks.xml"
SECURITY_RULES="security_rules.xml"

#---------------------------------------
# IPSET
#---------------------------------------

# ipset rules will not be loaded for tc-start, save-shaping-commands
IPSET_RULES="ipset_rules.xml"

#---------------------------------------
# KERNEL MODULES
#---------------------------------------

# Modules directory
#MODULE_DIR="/lib/modules/$("$UNAME" -r)"

# Modules to load
# Format (IFS=newline): module-name [parameters]
MODULES_TO_LOAD='
'

# Modules to remove
MODS_TO_RM='
'

#---------------------------------------
# INTERFACES
#---------------------------------------

# Loopback Interface - defaults to `lo' if unset
#LOOPBACK_IF="lo"

# List of all network interfaces (not lo)
# newline separates entries
# Format: iface-name | iface-alias | ext/local/ipsec | network-name
NET_INTERFACES="
"

#---------------------------------------
# PROLOG and EPILOG scripts
#---------------------------------------

# Format:
# startup-parameter[,...] {prolog|epilog} script-name {prolog|epilog} script-name
# newline separates entries
# i.e. start,stop prolog my_prolog_script epilog my_epilog_script
SCRIPT_MAP="
"

#---------------------------------------
# GLOBAL POLICY MAP
#---------------------------------------

# Format: table chain policy
POLICY_MAP="
filter INPUT DROP
filter OUTPUT DROP
filter FORWARD DROP
nat OUTPUT ACCEPT
nat PREROUTING ACCEPT
nat POSTROUTING ACCEPT
mangle INPUT ACCEPT
mangle OUTPUT ACCEPT
mangle FORWARD ACCEPT
mangle PREROUTING ACCEPT
mangle POSTROUTING ACCEPT
raw PREROUTING ACCEPT
raw OUTPUT ACCEPT
#rawpost POSTROUTING ACCEPT
security INPUT ACCEPT
security OUTPUT ACCEPT
security FORWARD ACCEPT
"

#---------------------------------------
# LOOPBACK
#---------------------------------------

# Allow loopback communiction (packets leaving/entering the loopback interface)
# Format: 0/1
ALLOW_LOOPBACK=1


#---------------------------------------
# Administrator remote connection
#---------------------------------------

# Format: admin_source-address local_destination-address local_destination-port
ADMIN_CONNECTION=""


#---------------------------------------
# CHAINS
#---------------------------------------

# Chains to create
# Format: table chain-name [...]
CHAIN_MAP="
"

# Automated jump tree creation
# Format: { none | interface | netname | netname+interface } { table [...] | all }
JUMP_TREE="none"

# Should all the jump tree chains created automatically
JUMP_TREE_CHAINS_CREATE_ALL=0

# After applying the ruleset should empty chains be removed?
# Format: 0/1
REMOVE_EMPTY_CHAINS=0

# After applying the ruleset should unreferenced chains be removed?
# Format: 0/1
REMOVE_UNREF_CHAINS=0

#---------------------------------------
# KNOWN RETURN TRAFFIC (STATE)
#---------------------------------------

# chain | state: [E,R,ER] default: ER | [top,bottom] default: top
KNOWN_TRAFFIC_MAP="
"

# When templates with reverse traffic definitions are in use
# should the reverse (return) rules be generated.
# Format: 0/1
REVERSE_INPUT_RULES_REQUIRED=0
REVERSE_FOWARD_RULES_REQUIRED=0

#---------------------------------------
# CHAIN TERMINATION - FINAL RULE
#---------------------------------------

# chain | final-action | [ limit[:burst:value ]] | [ log-level ] | [ log-options ]
FINAL_RULE_MAP="
"

#---------------------------------------
# INVALID / ILLEGAL / FRAGMENTED  PACKETS
#---------------------------------------

# Log packets in invalid state | Format: 0/1
LOG_INVALID=0

# Drop packets in invalid state | Format: 0/1
BLOCK_INVALID=1

# Log illegal packets | Format: 0/1
LOG_ILLEGAL=0

# Drop illegal packets | Format: 0/1
BLOCK_ILLEGAL=1

#---------------------------------------
# LOCAL NETWORK MAPS
#---------------------------------------

# Select LAN interfaces from where FTP is permitted
# Format: lan-interface[:external-interface][:active|passive] [...]
# (i.e. "eth1:eth0:active eth2 eth3::passive")
LAN_FTP=""

# Automatically configure LAN nameserver to IPS nameserver(s) rules
# Internet Service Provider nameservers
# Format: subnet-name | nameserver-ip-address[,...] | [ external-net-name ]
ISP_NS="
"

# LAN nameservers
# Format: subnet-name | nameserver-IP | [ nameserver-MAC-addr ]
LAN_NS="
"

# Internet Service Provider SMTP servers
# Format: subnet-name | ip-address[,...] | [ external-net-name ]
ISP_SMTP="
"

#---------------------------------------
# OUTPUT CHAIN HANDLING
#---------------------------------------

# Restrict or open OUTPUT chain | Format: 0 / 1 / IFBOUND / IPBOUND
RESTRICT_OUTPUT="0"

# If RESTRICT_OUTPUT is '1' and the policy of the OUTPUT chain is DROP,
# allow output (external interface) to nameservers from 'LOCAL_NS' (use /etc/resolv.conf entries)
# Format: 0/1
REST_OUT_DNS_ALLOW=0

# Local nameservers (on the firewall itself)
# used to allow dns traffic if OUTPUT chain is restricted 'RESTRICT_OUTPUT=1'
# Format: auto (read from /etc/resolv.conf) or:
# nameserver ip-address[,...] | [ external-net-name ]
LOCAL_NS="
"

# If RESTRICT_OUTPUT is '1' and the policy of the OUTPUT chain is DROP,
# allow all OUTPUT (external interface) to TIMESERVERS from variable 'NTP_SERVERS'
# Format: 0/1
REST_OUT_NTP_ALLOW=0

# Timeservers
# used to allow ntp traffic if OUTPUT chain is restricted 'RESTRICT_OUTPUT=1'
# Format: auto (read from /etc/ntp.conf !only IP addresses are valid!) or:
# Format: timeserver-ip-address[,...] | [ external-net-name ]
TIME_SERVERS="
"

# If RESTRICT_OUTPUT is '1', allow all OUTPUT to LAN(s) attached to certain interfaces
# Format: lan-interface [...]
REST_OUT_LAN_ALLOW=""

# If RESTRICT_OUTPUT is IFBOUND or IPBOUND, allow only ESTABLISHED (0), or ESTABLISHED and RELATED (1) traffic
# Format: 0/1
REST_ALLOW_RELATED=0

#---------------------------------------
# DROP / REJECT SETTINGS
#---------------------------------------

# Block DHCP broadcasts to listed interfaces (keep from spamming logs)
# Format: interface [...]
DROP_DHCP=""

# Block (Microsoft) UPNP broadcasts to listed interfaces (keep from spamming logs)
# Format: interface [...]
DROP_UPNP=""

#---------------------------------------
# LOGGING
#---------------------------------------

# Log prefix
LOG_PREFIX="IPT_"

# Global Log Limit
GLOBAL_LOGLIMIT="1/s"

# Global Burst Limit
GLOBAL_BURSTLIMIT=3

# Global Log Level
GLOBAL_LOGLEVL="INFO"

#---------------------------------------
# VPN
#---------------------------------------

# Disable / Enable IPSEC rules | Format: 0/1
ENABLE_IPSEC=0

# Allow ALL Branch to Branch traffic | Format: 0/1
ALLOW_ALL_BRANCH=0

# IPSEC rules file
IPSEC_RULES="ipsec_rules.xml"

# Local VPN Branch name
LOCAL_BRANCH=""

# VPN MAP
# Format: name | external IP | LAN range | LAN iface IP
VPN_MAP="
"
#---------------------------------------
# TRAFFIC SHAPING
#---------------------------------------

# Disable / Enable traffic shaping | Format: 0/1
ENABLE_TC_SHAPING=0

# Packet marking rules for traffic shaping
TC_RULEBLOCKS="tc_ruleblocks.xml"
TC_MANGLE_RULEBLOCKS="tc_mangle_ruleblocks.xml"
TC_MARK_RULES="tc_mark.rule.xml"

# Output Bulk Mark
# Format: device:mark [...] (i.e. eth0:6)
OUTPUT_BULK=""

# Forward Bulk Mark
# Format: input-device,output-device:mark [...] (i.e. eth1,eth0:6)
FORWARD_BULK=""

# Priorize SYN packets
# Format: output-device:mark [...] (i.e. eth0:1 eth1:2)
PRIORITIZE_SYN=""

#---------------------------------------
# MISC SETTINGS
#---------------------------------------

# Exit on configuration and command apply errors
EXIT_ON_ERROR=1

# Rule placeholder character.
# Used as a placeholder for unused values in the rule configuration file.
# Valid values are: `_' `-' `.' `,' (defaults to `_')
#RULE_PLACEHOLDER='_'

# Always use the conntrack match extension instead of the state match
# Format: 0/1
USE_M_CONNTRACK=0

# nfacct map - Netfilter accounting objects
# Format: name ...
NFACCT_OBJ_MAP="
"

#-------------------------------------------------------------------------------
# SYSCTL SETTINGS
#-------------------------------------------------------------------------------

#---------------------------------------
#--- CERTAIN OR ALL INTERFACES
#---------------------------------------

#---------------------------------------
#--- NETWORK CONF/ SETTINGS
#---------------------------------------

# Format: '0' / '1' or 'ethX:0' / 'ethX:1' or undefined
# i.e. '1', or 'eth0:1', or 'eth0:0 eth1:1 eth2:0'

# Disable / Enable spoof protection
PROC_RP_FILTER=1

# Disable / Enable ICMP-Redirects for all interfaces
PROC_ICMP_REDIRECTS=0

# Disable / Enable free route (source routed packets)
PROC_SOURCE_ROUTE=0

# Disable / Enable Logging of martians
PROC_LOG_MARTIANS=""

#PROC_SEND_REDIRECTS=0
#PROC_SECURE_REDIRECTS=0
#PROC_SHARED_MEDIA=""
#PROC_PROXY_ARP=0
#PROC_MC_FORWARDING=0
#PROC_ARP_FILTER=0

#---------------------------------------
#--- GLOBAL SETTINGS
#---------------------------------------

#---------------------------------------
#--- IP SETTINGS
#---------------------------------------

# Disable / Enable IP DynAddr | Format: 0/1 or undefined
#PROC_IPDYNADDR=0

# Disable / Enable IP forwarding | Format: 0/1 or undefined
PROC_IP_FORWARD=0

#PROC_IPFRAG_TIME=30
#PROC_IPFRAG_HIGH_THRESH=262144
#PROC_IPFRAG_LOW_THRESH=196608
#PROC_IP_DEFAULT_TTL=64
#PROC_IP_NONLOCAL_BIND=0
#PROC_IP_NO_PMTO_DISC=0

#---------------------------------------
#--- TCP SETTINGS
#---------------------------------------

#PROC_TCP_ABC=0
#PROC_TCP_ABORT_ON_OVERFLOW=0
#PROC_TCP_ADV_WIN_SCALE=2
#PROC_TCP_APP_WIN=31
#PROC_TCP_BASE_MSS=512
#PROC_TCP_CONGESTION_CONTROL=""
#PROC_TCP_DSACK=1

# Disable / Enable ECN (Explicit Congestion Notification) | Format: 0/1
#PROC_TCP_ECN=0

# Disable / Enable tcp fack | Format: 0/1
#PROC_TCP_FACK=0

# Set FIN timeout | Format: value (i.e. 10)
#PROC_TCP_FIN_TIMEOUT=10

#PROC_TCP_FRTO=0

# Set tcp keepalive interval | Format: value (i.e. 1800)
#PROC_TCP_KEEPALIVE_INT=1800

#PROC_TCP_KEEPALIVE_PROBES=9
#PROC_TCP_KEEPALIVE_TIME=7200
#PROC_TCP_LOW_LATENCY=0
#PROC_TCP_MAX_ORPHANS=8192
#PROC_TCP_MAX_SYN_BACKLOG=256
#PROC_TCP_MAX_TW_BUCKETS=16384 # default 180000?
#PROC_TCP_MEM="6144 8192 12288"
#PROC_TCP_MODERATE_RCVBUF=1
#PROC_TCP_MTU_PROBING=0
#PROC_TCP_NO_METRICS_SAVE=0
#PROC_TCP_ORPHAN_RETRIES=0 # default 7?
#PROC_TCP_REORDERING=3
#PROC_TCP_RETRANS_COLLAPSE=0 # default is enabled
#PROC_TCP_RETRIES1=3
#PROC_TCP_RETRIES2=2
#PROC_TCP_RFC1337=0
#PROC_TCP_RMEM="4096 87380 262144"

# Disable / Enable tcp sack | Format: 0/1
#PROC_TCP_SACK=0

#PROC_TCP_SLOW_START_AFTER_IDLE=1
#PROC_TCP_STDURG=0
#PROC_TCP_SYNACK_RETRIES=5

# Disable / Enable TCP-SYN-COOKIES (SYN-FLOOD PROTECTION) | Format: 0/1
#PROC_TCP_SYN_COOKIES=1

#PROC_TCP_SYN_RETRIES=5
#PROC_TCP_TIMESTAMPS=1
#PROC_TCP_TSO_WIN_DIVISOR=3
#PROC_TCP_TW_RECYCLE=0
#PROC_TCP_TW_REUSE=0

# Disable / Enable TCP windows scaling | Format: 0/1
#PROC_TCP_WINDOW_SCALING=1

#PROC_TCP_WORKAROUND_SIGNED_WINDOWS=0
#PROC_TCP_WMEM="4096 16384 262144"

#---------------------------------------
#--- ICMP SETTINGS
#---------------------------------------

# Disable / Enable Ignoring of bogus icmp messages | Format: 0/1
#PROC_IGNORE_BOGUS_ICMP=1

# Disable / Enable ICMP echo broadcasts | Format: 0/1
#PROC_ICMP_BROADCASTS=0

# icmp_echo_ignore_all - BOOLEAN Default: 0
# If set to 1, then the kernel will ignore all ICMP ECHO requests sent to it.
#PROC_ICMP_ECHO_IGNORE_ALL=0

# icmp_ratelimit - INTEGER Default: 1000
# Limit the maximal rates for sending ICMP packets whose type matches
# icmp_ratemask (see below) to specific targets.
# 0 to disable any limiting,
# otherwise the minimal space between responses in milliseconds.
#PROC_ICMP_RATELIMIT=250

# icmp_ratemask - INTEGER
# Mask made of ICMP types for which rates are being limited.
# Significant bits: IHGFEDCBA9876543210
# Default mask:     0000001100000011000 (6168)
#
# Bit definitions (see include/linux/icmp.h):
# 	0 Echo Reply
# 	3 Destination Unreachable *
# 	4 Source Quench *
# 	5 Redirect
# 	8 Echo Request
# 	B Time Exceeded *
# 	C Parameter Problem *
# 	D Timestamp Request
# 	E Timestamp Reply
# 	F Info Request
# 	G Info Reply
# 	H Address Mask Request
# 	I Address Mask Reply
#
# 	* These are rate limited by default (see default mask above)
#PROC_ICMP_RATEMASK=6168

#---------------------------------------
#--- NETFILTER SETTINGS
#---------------------------------------

# Increase the default queuelength. (Kernel Default: 1024)
#PROC_QUEUELEN=2048

# Set maximum number of connections to track
# (leave unconfigured if PROC_CONNTRACK_HASHSIZE is set to automatic calculation)
# Format: value (i.e. 8192) | [xX]factor (i.e. x2 to calculate the value automatically and multiply it with 2)
#PROC_CONNTRACK_MAX=12216

# Set conntrack module hashsize (leave unconfigured if PROC_CONNTRACK_MAX is set to automatic calculation)
# Format: value (i.e. 8192) | [xX]factor (i.e. x2 to calculate the value automatically and multiply it with 2)
#PROC_CONNTRACK_HASHSIZE=

# Deactivate automatic conntrack helper assignment (to all IP addresses) (available since kernel v3.5)
# instead use -t raw -j CT --helper xyz
# Format: 0 (default) | 1 (to deactivate)
#PROC_CT_HELPER=0

# nf_conntrack_acct - BOOLEAN
# 0 - disabled (default)
# 1 - enabled
# Enable connection tracking flow accounting. 64-bit byte and packet
# counters per flow are added.
#PROC_CT_ACCT=0

# nf_conntrack_events - BOOLEAN
# 0 - disabled
# 1 - enabled (default)
# If this option is enabled, the connection tracking code will
# provide userspace with connection tracking events via ctnetlink.
#PROC_CT_EVENTS=1

# nf_conntrack_events_retry_timeout - INTEGER (seconds) default 15
# This option is only relevant when "reliable connection tracking
# events" are used.  Normally, ctnetlink is "lossy", that is,
# events are normally dropped when userspace listeners can't keep up.
# Userspace can request "reliable event mode".  When this mode is
# active, the conntrack will only be destroyed after the event was
# delivered.  If event delivery fails, the kernel periodically
# re-tries to send the event to userspace.
# This is the maximum interval the kernel should use when re-trying
# to deliver the destroy event.
# A higher number means there will be fewer delivery retries and it
# will take longer for a backlog to be processed.
#PROC_CT_EVENTS_RETRY_TIMEOUT=15

# nf_conntrack_expect_max - INTEGER
# Maximum size of expectation table.  Default value is
# nf_conntrack_buckets / 256. Minimum is 1.
#PROC_CT_EXPECT_MAX=48

# nf_conntrack_generic_timeout - INTEGER (seconds) default 600
# Default for generic timeout. This refers to layer 4 unknown/unsupported protocols.
#PROC_CT_GENERIC_TIMEOUT=600

# nf_conntrack_icmp_timeout - INTEGER (seconds) default 30
# Default for ICMP timeout.
#PROC_CT_ICMP_TIMEOUT=30

# nf_conntrack_log_invalid - INTEGER
# Log invalid packets of a type specified by value.
# 0   - disable (default)
# 1   - log ICMP packets
# 6   - log TCP packets
# 17  - log UDP packets
# 33  - log DCCP packets
# 41  - log ICMPv6 packets
# 136 - log UDPLITE packets
# 255 - log packets of any protocol
#PROC_CT_LOG_INVALID=0

# nf_conntrack_tcp_be_liberal - BOOLEAN
# 0 - disabled (default)
# 1 - enabled
# Be conservative in what you do, be liberal in what you accept from others.
# If it's non-zero, we mark only out of window RST segments as INVALID.
#PROC_CT_TCP_BE_LIBERAL=0

# nf_conntrack_tcp_loose - BOOLEAN
# 0 - disabled
# 1 - enabled (default)
# If it is set to zero, we disable picking up already established
# connections.
#PROC_CT_TCP_LOOSE=0

# nf_conntrack_tcp_max_retrans - INTEGER default 3
# Maximum number of packets that can be retransmitted without
# received an (acceptable) ACK from the destination. If this number
# is reached, a shorter timer will be started.
#PROC_CT_TCP_MAX_RETRANS=3

# nf_conntrack_tcp_timeout_close - INTEGER (seconds) default 10
#PROC_CT_TCP_TIMEOUT_CLOSE=10

# nf_conntrack_tcp_timeout_close_wait - INTEGER (seconds) default 60
#PROC_CT_TCP_TIMEOUT_CLOSE_WAIT=60

# nf_conntrack_tcp_timeout_established - INTEGER (seconds) default 432000 (5 days)
#PROC_CT_TCP_TIMEOUT_ESTABLISHED=432000

# nf_conntrack_tcp_timeout_fin_wait - INTEGER (seconds) default 120
#PROC_CT_TCP_TIMEOUT_FIN_WAIT=120

# nf_conntrack_tcp_timeout_last_ack - INTEGER (seconds) default 30
#PROC_CT_TCP_TIMEOUT_LAST_ACK=30

# nf_conntrack_tcp_timeout_max_retrans - INTEGER (seconds) default 300
#PROC_CT_TCP_TIMEOUT_MAX_RETRANS=300

# nf_conntrack_tcp_timeout_syn_recv - INTEGER (seconds) default 60
#PROC_CT_TCP_TIMEOUT_SYN_RECV=60

# nf_conntrack_tcp_timeout_syn_sent - INTEGER (seconds) default 120
#PROC_CT_TCP_TIMEOUT_SYN_SENT=120

# nf_conntrack_tcp_timeout_time_wait - INTEGER (seconds) default 120
#PROC_CT_TCP_TIMEOUT_TIME_WAIT=120

# nf_conntrack_tcp_timeout_unacknowledged - INTEGER (seconds) default 300
#PROC_CT_TCP_TIMEOUT_UNACK=300

# nf_conntrack_udp_timeout - INTEGER (seconds) default 30
#PROC_CT_UDP_TIMEOUT=30

# nf_conntrack_udp_timeout_stream - INTEGER (seconds) # default 180
# This extended timeout will be used in case there is an UDP stream
# detected.
#PROC_CT_UDP_TIMEOUT_STREAM=180

#---------------------------------------
#--- INET PEER SETTINGS
#---------------------------------------

#PROC_INET_PEER_GC_MAXTIME=120
#PROC_INET_PEER_GC_MINTIME=10

# inet_peer_maxttl - INTEGER
# Maximum time-to-live of entries. Unused entries will expire after
# this period of time if there is no memory pressure on the pool (i.e.
# when the number of entries in the pool is very small).
# Measured in seconds.
#PROC_INET_PEER_GC_MAXTTL=600

# inet_peer_minttl - INTEGER
# Minimum time-to-live of entries. Should be enough to cover fragment
# time-to-live on the reassembling side. This minimum time-to-live  is
# guaranteed if the pool size is less than inet_peer_threshold.
# Measured in seconds.
#PROC_INET_PEER_GC_MINTTL=120

# inet_peer_threshold - INTEGER
# The approximate size of the storage. Starting from this threshold
# entries will be thrown aggressively. This threshold also determines
# entries' time-to-live and time intervals between garbage collection
# passes. More entries, less time-to-live, less GC interval.
#PROC_INET_PEER_THRESHOLD=65664

#-------------------------------------------------------------------------------

